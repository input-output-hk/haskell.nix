name: Cabal
version: 2.4.0.1
id: Cabal-2.4.0.1
key: Cabal-2.4.0.1
license: BSD-3-Clause
copyright: 2003-2018, Cabal Development Team (see AUTHORS file)
maintainer: cabal-devel@haskell.org
author: Cabal Development Team <cabal-devel@haskell.org>
homepage: http://www.haskell.org/cabal/
synopsis: A framework for packaging Haskell software
description:
    The Haskell Common Architecture for Building Applications and
    Libraries: a framework defining a common interface for authors to more
    easily build their Haskell applications in a portable way.
    .
    The Haskell Cabal is part of a larger infrastructure for distributing,
    organizing, and cataloging Haskell libraries and tools.
category: Distribution
exposed: True
exposed-modules:
    Distribution.Backpack Distribution.Backpack.ComponentsGraph
    Distribution.Backpack.Configure
    Distribution.Backpack.ConfiguredComponent
    Distribution.Backpack.DescribeUnitId
    Distribution.Backpack.FullUnitId
    Distribution.Backpack.LinkedComponent
    Distribution.Backpack.ModSubst Distribution.Backpack.ModuleShape
    Distribution.Backpack.PreModuleShape Distribution.CabalSpecVersion
    Distribution.Compat.Binary Distribution.Compat.CharParsing
    Distribution.Compat.CreatePipe Distribution.Compat.DList
    Distribution.Compat.Directory Distribution.Compat.Environment
    Distribution.Compat.Exception Distribution.Compat.Graph
    Distribution.Compat.Internal.TempFile Distribution.Compat.Lens
    Distribution.Compat.Newtype Distribution.Compat.Parsing
    Distribution.Compat.Prelude.Internal Distribution.Compat.ReadP
    Distribution.Compat.Semigroup Distribution.Compat.Stack
    Distribution.Compat.Time Distribution.Compiler
    Distribution.FieldGrammar Distribution.FieldGrammar.Class
    Distribution.FieldGrammar.FieldDescrs
    Distribution.FieldGrammar.Parsec Distribution.FieldGrammar.Pretty
    Distribution.InstalledPackageInfo Distribution.License
    Distribution.Make Distribution.ModuleName Distribution.Package
    Distribution.PackageDescription
    Distribution.PackageDescription.Check
    Distribution.PackageDescription.Configuration
    Distribution.PackageDescription.FieldGrammar
    Distribution.PackageDescription.Parsec
    Distribution.PackageDescription.PrettyPrint
    Distribution.PackageDescription.Quirks
    Distribution.PackageDescription.Utils Distribution.ParseUtils
    Distribution.Parsec.Class Distribution.Parsec.Common
    Distribution.Parsec.ConfVar Distribution.Parsec.Field
    Distribution.Parsec.FieldLineStream Distribution.Parsec.Lexer
    Distribution.Parsec.LexerMonad Distribution.Parsec.Newtypes
    Distribution.Parsec.ParseResult Distribution.Parsec.Parser
    Distribution.Pretty Distribution.PrettyUtils Distribution.ReadE
    Distribution.SPDX Distribution.SPDX.License
    Distribution.SPDX.LicenseExceptionId
    Distribution.SPDX.LicenseExpression Distribution.SPDX.LicenseId
    Distribution.SPDX.LicenseListVersion
    Distribution.SPDX.LicenseReference Distribution.Simple
    Distribution.Simple.Bench Distribution.Simple.Build
    Distribution.Simple.Build.Macros
    Distribution.Simple.Build.PathsModule
    Distribution.Simple.BuildPaths Distribution.Simple.BuildTarget
    Distribution.Simple.BuildToolDepends Distribution.Simple.CCompiler
    Distribution.Simple.Command Distribution.Simple.Compiler
    Distribution.Simple.Configure Distribution.Simple.Doctest
    Distribution.Simple.Flag Distribution.Simple.GHC
    Distribution.Simple.GHCJS Distribution.Simple.Glob
    Distribution.Simple.Haddock Distribution.Simple.HaskellSuite
    Distribution.Simple.Hpc Distribution.Simple.Install
    Distribution.Simple.InstallDirs Distribution.Simple.LocalBuildInfo
    Distribution.Simple.PackageIndex Distribution.Simple.PreProcess
    Distribution.Simple.PreProcess.Unlit Distribution.Simple.Program
    Distribution.Simple.Program.Ar Distribution.Simple.Program.Builtin
    Distribution.Simple.Program.Db Distribution.Simple.Program.Find
    Distribution.Simple.Program.GHC Distribution.Simple.Program.HcPkg
    Distribution.Simple.Program.Hpc
    Distribution.Simple.Program.Internal Distribution.Simple.Program.Ld
    Distribution.Simple.Program.ResponseFile
    Distribution.Simple.Program.Run Distribution.Simple.Program.Script
    Distribution.Simple.Program.Strip Distribution.Simple.Program.Types
    Distribution.Simple.Register Distribution.Simple.Setup
    Distribution.Simple.SrcDist Distribution.Simple.Test
    Distribution.Simple.Test.ExeV10 Distribution.Simple.Test.LibV09
    Distribution.Simple.Test.Log Distribution.Simple.UHC
    Distribution.Simple.UserHooks Distribution.Simple.Utils
    Distribution.System Distribution.TestSuite Distribution.Text
    Distribution.Types.AbiDependency Distribution.Types.AbiHash
    Distribution.Types.AnnotatedId Distribution.Types.Benchmark
    Distribution.Types.Benchmark.Lens
    Distribution.Types.BenchmarkInterface
    Distribution.Types.BenchmarkType Distribution.Types.BuildInfo
    Distribution.Types.BuildInfo.Lens Distribution.Types.BuildType
    Distribution.Types.Component Distribution.Types.ComponentId
    Distribution.Types.ComponentInclude
    Distribution.Types.ComponentLocalBuildInfo
    Distribution.Types.ComponentName
    Distribution.Types.ComponentRequestedSpec
    Distribution.Types.CondTree Distribution.Types.Condition
    Distribution.Types.Dependency Distribution.Types.DependencyMap
    Distribution.Types.ExeDependency Distribution.Types.Executable
    Distribution.Types.Executable.Lens
    Distribution.Types.ExecutableScope Distribution.Types.ExposedModule
    Distribution.Types.ForeignLib Distribution.Types.ForeignLib.Lens
    Distribution.Types.ForeignLibOption
    Distribution.Types.ForeignLibType
    Distribution.Types.GenericPackageDescription
    Distribution.Types.GenericPackageDescription.Lens
    Distribution.Types.HookedBuildInfo
    Distribution.Types.IncludeRenaming
    Distribution.Types.InstalledPackageInfo
    Distribution.Types.InstalledPackageInfo.FieldGrammar
    Distribution.Types.InstalledPackageInfo.Lens
    Distribution.Types.LegacyExeDependency Distribution.Types.Lens
    Distribution.Types.Library Distribution.Types.Library.Lens
    Distribution.Types.LocalBuildInfo Distribution.Types.Mixin
    Distribution.Types.Module Distribution.Types.ModuleReexport
    Distribution.Types.ModuleRenaming
    Distribution.Types.MungedPackageId
    Distribution.Types.MungedPackageName
    Distribution.Types.PackageDescription
    Distribution.Types.PackageDescription.Lens
    Distribution.Types.PackageId Distribution.Types.PackageId.Lens
    Distribution.Types.PackageName
    Distribution.Types.PkgconfigDependency
    Distribution.Types.PkgconfigName Distribution.Types.SetupBuildInfo
    Distribution.Types.SetupBuildInfo.Lens
    Distribution.Types.SourceRepo Distribution.Types.SourceRepo.Lens
    Distribution.Types.TargetInfo Distribution.Types.TestSuite
    Distribution.Types.TestSuite.Lens
    Distribution.Types.TestSuiteInterface Distribution.Types.TestType
    Distribution.Types.UnitId Distribution.Types.UnqualComponentName
    Distribution.Types.Version Distribution.Types.VersionInterval
    Distribution.Types.VersionRange Distribution.Utils.Generic
    Distribution.Utils.IOData Distribution.Utils.LogProgress
    Distribution.Utils.MapAccum Distribution.Utils.NubList
    Distribution.Utils.Progress Distribution.Utils.ShortText
    Distribution.Verbosity Distribution.Version
    Language.Haskell.Extension
hidden-modules: Distribution.Backpack.PreExistingComponent
                Distribution.Backpack.ReadyComponent Distribution.Backpack.MixLink
                Distribution.Backpack.ModuleScope Distribution.Backpack.UnifyM
                Distribution.Backpack.Id Distribution.Utils.UnionFind
                Distribution.Utils.Base62 Distribution.Compat.CopyFile
                Distribution.Compat.GetShortPathName Distribution.Compat.MonadFail
                Distribution.Compat.Prelude Distribution.Compat.SnocList
                Distribution.GetOpt Distribution.Lex Distribution.Utils.String
                Distribution.Simple.GHC.EnvironmentParser
                Distribution.Simple.GHC.Internal Distribution.Simple.GHC.ImplInfo
                Paths_Cabal
hs-libraries: HSCabal-2.4.0.1
depends:
    Win32-2.6.1.0 array-0.5.3.0 base-4.12.0.0 binary-0.8.6.0
    bytestring-0.10.8.2 containers-0.6.0.1 deepseq-1.4.4.0
    directory-1.3.3.0 filepath-1.4.2.1 mtl-2.2.2 parsec-3.1.13.0
    pretty-1.1.3.6 process-1.6.5.0 text-1.2.3.1 time-1.8.0.2
    transformers-0.5.6.2
---
name: Win32
version: 2.6.1.0
id: Win32-2.6.1.0
key: Win32-2.6.1.0
license: BSD-3-Clause
copyright: Alastair Reid, 1999-2003; shelarcy, 2012-2013; Tamar Christina, 2016-2017
maintainer: Haskell Libraries <libraries@haskell.org>
author: Alastair Reid, shelarcy, Tamar Christina
homepage: https://github.com/haskell/win32
synopsis: A binding to part of the Win32 library
description:
    A binding to part of the Win32 library.
category: System, Graphics
exposed: True
exposed-modules:
    Graphics.Win32 Graphics.Win32.Control Graphics.Win32.Dialogue
    Graphics.Win32.GDI Graphics.Win32.GDI.AlphaBlend
    Graphics.Win32.GDI.Bitmap Graphics.Win32.GDI.Brush
    Graphics.Win32.GDI.Clip Graphics.Win32.GDI.Font
    Graphics.Win32.GDI.Graphics2D Graphics.Win32.GDI.HDC
    Graphics.Win32.GDI.Palette Graphics.Win32.GDI.Path
    Graphics.Win32.GDI.Pen Graphics.Win32.GDI.Region
    Graphics.Win32.GDI.Types Graphics.Win32.Icon Graphics.Win32.Key
    Graphics.Win32.LayeredWindow Graphics.Win32.Menu
    Graphics.Win32.Message Graphics.Win32.Misc Graphics.Win32.Resource
    Graphics.Win32.Window Graphics.Win32.Window.AnimateWindow
    Graphics.Win32.Window.ForegroundWindow Graphics.Win32.Window.HotKey
    Graphics.Win32.Window.IMM Graphics.Win32.Window.PostMessage
    Media.Win32 System.Win32 System.Win32.Automation
    System.Win32.Automation.Input System.Win32.Automation.Input.Key
    System.Win32.Automation.Input.Mouse System.Win32.Console
    System.Win32.Console.CtrlHandler System.Win32.Console.HWND
    System.Win32.Console.Title System.Win32.DLL System.Win32.DebugApi
    System.Win32.Encoding System.Win32.Exception.Unsupported
    System.Win32.File System.Win32.FileMapping System.Win32.HardLink
    System.Win32.Info System.Win32.Info.Computer
    System.Win32.Info.Version System.Win32.Mem System.Win32.MinTTY
    System.Win32.NLS System.Win32.Path System.Win32.Process
    System.Win32.Registry System.Win32.Security System.Win32.Shell
    System.Win32.SimpleMAPI System.Win32.String
    System.Win32.SymbolicLink System.Win32.Thread System.Win32.Time
    System.Win32.Types System.Win32.Utils System.Win32.Word
hs-libraries: HSWin32-2.6.1.0
extra-libraries:
    user32 gdi32 winmm advapi32 shell32 shfolder shlwapi msimg32 imm32
includes:
    alphablend.h diatemp.h dumpBMP.h ellipse.h errors.h HsGDI.h
    HsWin32.h Win32Aux.h win32debug.h windows_cconv.h WndProc.h
    alignment.h
depends:
    base-4.12.0.0 bytestring-0.10.8.2 filepath-1.4.2.1
---
name: array
version: 0.5.3.0
id: array-0.5.3.0
key: array-0.5.3.0
license: BSD-3-Clause
maintainer: libraries@haskell.org
synopsis: Mutable and immutable arrays
description:
    In addition to providing the "Data.Array" module
    <http://www.haskell.org/onlinereport/haskell2010/haskellch14.html as specified in the Haskell 2010 Language Report>,
    this package also defines the classes 'IArray' of
    immutable arrays and 'MArray' of arrays mutable within appropriate
    monads, as well as some instances of these classes.
category: Data Structures
exposed: True
exposed-modules:
    Data.Array Data.Array.Base Data.Array.IArray Data.Array.IO
    Data.Array.IO.Internals Data.Array.IO.Safe Data.Array.MArray
    Data.Array.MArray.Safe Data.Array.ST Data.Array.ST.Safe
    Data.Array.Storable Data.Array.Storable.Internals
    Data.Array.Storable.Safe Data.Array.Unboxed Data.Array.Unsafe
hs-libraries: HSarray-0.5.3.0
depends:
    base-4.12.0.0
---
name: base
version: 4.12.0.0
id: base-4.12.0.0
key: base-4.12.0.0
license: BSD-3-Clause
maintainer: libraries@haskell.org
synopsis: Basic libraries
description:
    This package contains the Standard Haskell "Prelude" and its support libraries,
    and a large collection of useful libraries ranging from data
    structures to parsing combinators and debugging utilities.
category: Prelude
exposed: True
exposed-modules:
    Control.Applicative Control.Arrow Control.Category
    Control.Concurrent Control.Concurrent.Chan Control.Concurrent.MVar
    Control.Concurrent.QSem Control.Concurrent.QSemN Control.Exception
    Control.Exception.Base Control.Monad Control.Monad.Fail
    Control.Monad.Fix Control.Monad.IO.Class Control.Monad.Instances
    Control.Monad.ST Control.Monad.ST.Lazy Control.Monad.ST.Lazy.Safe
    Control.Monad.ST.Lazy.Unsafe Control.Monad.ST.Safe
    Control.Monad.ST.Strict Control.Monad.ST.Unsafe Control.Monad.Zip
    Data.Bifoldable Data.Bifunctor Data.Bitraversable Data.Bits
    Data.Bool Data.Char Data.Coerce Data.Complex Data.Data Data.Dynamic
    Data.Either Data.Eq Data.Fixed Data.Foldable Data.Function
    Data.Functor Data.Functor.Classes Data.Functor.Compose
    Data.Functor.Const Data.Functor.Contravariant Data.Functor.Identity
    Data.Functor.Product Data.Functor.Sum Data.IORef Data.Int Data.Ix
    Data.Kind Data.List Data.List.NonEmpty Data.Maybe Data.Monoid
    Data.Ord Data.Proxy Data.Ratio Data.STRef Data.STRef.Lazy
    Data.STRef.Strict Data.Semigroup Data.String Data.Traversable
    Data.Tuple Data.Type.Bool Data.Type.Coercion Data.Type.Equality
    Data.Typeable Data.Unique Data.Version Data.Void Data.Word
    Debug.Trace Foreign Foreign.C Foreign.C.Error Foreign.C.String
    Foreign.C.Types Foreign.Concurrent Foreign.ForeignPtr
    Foreign.ForeignPtr.Safe Foreign.ForeignPtr.Unsafe Foreign.Marshal
    Foreign.Marshal.Alloc Foreign.Marshal.Array Foreign.Marshal.Error
    Foreign.Marshal.Pool Foreign.Marshal.Safe Foreign.Marshal.Unsafe
    Foreign.Marshal.Utils Foreign.Ptr Foreign.Safe Foreign.StablePtr
    Foreign.Storable GHC.Arr GHC.Base GHC.ByteOrder GHC.Char GHC.Clock
    GHC.Conc GHC.Conc.IO GHC.Conc.Signal GHC.Conc.Sync GHC.Conc.Windows
    GHC.ConsoleHandler GHC.Constants GHC.Desugar GHC.Enum
    GHC.Environment GHC.Err GHC.Exception GHC.Exception.Type
    GHC.ExecutionStack GHC.ExecutionStack.Internal GHC.Exts
    GHC.Fingerprint GHC.Fingerprint.Type GHC.Float
    GHC.Float.ConversionUtils GHC.Float.RealFracMethods GHC.Foreign
    GHC.ForeignPtr GHC.GHCi GHC.Generics GHC.IO GHC.IO.Buffer
    GHC.IO.BufferedIO GHC.IO.Device GHC.IO.Encoding
    GHC.IO.Encoding.CodePage GHC.IO.Encoding.CodePage.API
    GHC.IO.Encoding.CodePage.Table GHC.IO.Encoding.Failure
    GHC.IO.Encoding.Iconv GHC.IO.Encoding.Latin1 GHC.IO.Encoding.Types
    GHC.IO.Encoding.UTF16 GHC.IO.Encoding.UTF32 GHC.IO.Encoding.UTF8
    GHC.IO.Exception GHC.IO.FD GHC.IO.Handle GHC.IO.Handle.FD
    GHC.IO.Handle.Internals GHC.IO.Handle.Lock GHC.IO.Handle.Text
    GHC.IO.Handle.Types GHC.IO.IOMode GHC.IO.Unsafe GHC.IOArray
    GHC.IORef GHC.Int GHC.List GHC.MVar GHC.Maybe GHC.Natural GHC.Num
    GHC.OldList GHC.OverloadedLabels GHC.Pack GHC.Profiling GHC.Ptr
    GHC.RTS.Flags GHC.Read GHC.Real GHC.Records GHC.ResponseFile GHC.ST
    GHC.STRef GHC.Show GHC.Stable GHC.StableName GHC.Stack
    GHC.Stack.CCS GHC.Stack.Types GHC.StaticPtr GHC.Stats GHC.Storable
    GHC.TopHandler GHC.TypeLits GHC.TypeNats GHC.Unicode GHC.Weak
    GHC.Windows GHC.Word Numeric Numeric.Natural Prelude System.CPUTime
    System.Console.GetOpt System.Environment System.Environment.Blank
    System.Exit System.IO System.IO.Error System.IO.Unsafe System.Info
    System.Mem System.Mem.StableName System.Mem.Weak
    System.Posix.Internals System.Posix.Types System.Timeout
    Text.ParserCombinators.ReadP Text.ParserCombinators.ReadPrec
    Text.Printf Text.Read Text.Read.Lex Text.Show Text.Show.Functions
    Type.Reflection Type.Reflection.Unsafe Unsafe.Coerce
hidden-modules: Control.Monad.ST.Imp Control.Monad.ST.Lazy.Imp
                Data.Functor.Utils Data.OldList Data.Semigroup.Internal
                Data.Typeable.Internal Foreign.ForeignPtr.Imp
                GHC.StaticPtr.Internal System.Environment.ExecutablePath
                System.CPUTime.Utils System.CPUTime.Windows
hs-libraries: HSbase-4.12.0.0
extra-libraries:
    wsock32 user32 shell32 msvcrt mingw32 mingwex
includes:
    HsBase.h
depends:
    ghc-prim-0.5.3 integer-gmp-1.0.2.0 rts
---
name: binary
version: 0.8.6.0
id: binary-0.8.6.0
key: binary-0.8.6.0
license: BSD-3-Clause
maintainer: Lennart Kolmodin, Don Stewart <dons00@gmail.com>
author: Lennart Kolmodin <kolmodin@gmail.com>
stability: provisional
homepage: https://github.com/kolmodin/binary
synopsis: Binary serialisation for Haskell values using lazy ByteStrings
description:
    Efficient, pure binary serialisation using lazy ByteStrings.
    Haskell values may be encoded to and from binary formats,
    written to disk as binary, or sent over the network.
    The format used can be automatically generated, or
    you can choose to implement a custom format if needed.
    Serialisation speeds of over 1 G\/sec have been observed,
    so this library should be suitable for high performance
    scenarios.
category: Data, Parsing
exposed: True
exposed-modules:
    Data.Binary Data.Binary.Builder Data.Binary.Get
    Data.Binary.Get.Internal Data.Binary.Put
hidden-modules: Data.Binary.Class Data.Binary.Internal
                Data.Binary.Generic Data.Binary.FloatCast
hs-libraries: HSbinary-0.8.6.0
depends:
    array-0.5.3.0 base-4.12.0.0 bytestring-0.10.8.2 containers-0.6.0.1
---
name: bytestring
version: 0.10.8.2
id: bytestring-0.10.8.2
key: bytestring-0.10.8.2
license: BSD-3-Clause
copyright: Copyright (c) Don Stewart          2005-2009,
           (c) Duncan Coutts        2006-2015,
           (c) David Roundy         2003-2005,
           (c) Jasper Van der Jeugt 2010,
           (c) Simon Meier          2010-2013.
maintainer: Duncan Coutts <duncan@community.haskell.org>
author: Don Stewart,
        Duncan Coutts
homepage: https://github.com/haskell/bytestring
synopsis: Fast, compact, strict and lazy byte strings with a list interface
description:
    An efficient compact, immutable byte string type (both strict and lazy)
    suitable for binary or 8-bit character data.
    .
    The 'ByteString' type represents sequences of bytes or 8-bit characters.
    It is suitable for high performance use, both in terms of large data
    quantities, or high speed requirements. The 'ByteString' functions follow
    the same style as Haskell\'s ordinary lists, so it is easy to convert code
    from using 'String' to 'ByteString'.
    .
    Two 'ByteString' variants are provided:
    .
    * Strict 'ByteString's keep the string as a single large array. This
    makes them convenient for passing data between C and Haskell.
    .
    * Lazy 'ByteString's use a lazy list of strict chunks which makes it
    suitable for I\/O streaming tasks.
    .
    The @Char8@ modules provide a character-based view of the same
    underlying 'ByteString' types. This makes it convenient to handle mixed
    binary and 8-bit character content (which is common in many file formats
    and network protocols).
    .
    The 'Builder' module provides an efficient way to build up 'ByteString's
    in an ad-hoc way by repeated concatenation. This is ideal for fast
    serialisation or pretty printing.
    .
    There is also a 'ShortByteString' type which has a lower memory overhead
    and can can be converted to or from a 'ByteString', but supports very few
    other operations. It is suitable for keeping many short strings in memory.
    .
    'ByteString's are not designed for Unicode. For Unicode strings you should
    use the 'Text' type from the @text@ package.
    .
    These modules are intended to be imported qualified, to avoid name clashes
    with "Prelude" functions, e.g.
    .
    > import qualified Data.ByteString as BS
category: Data
exposed: True
exposed-modules:
    Data.ByteString Data.ByteString.Builder
    Data.ByteString.Builder.Extra Data.ByteString.Builder.Internal
    Data.ByteString.Builder.Prim Data.ByteString.Builder.Prim.Internal
    Data.ByteString.Char8 Data.ByteString.Internal Data.ByteString.Lazy
    Data.ByteString.Lazy.Builder Data.ByteString.Lazy.Builder.ASCII
    Data.ByteString.Lazy.Builder.Extras Data.ByteString.Lazy.Char8
    Data.ByteString.Lazy.Internal Data.ByteString.Short
    Data.ByteString.Short.Internal Data.ByteString.Unsafe
hidden-modules: Data.ByteString.Builder.ASCII
                Data.ByteString.Builder.Prim.Binary
                Data.ByteString.Builder.Prim.ASCII
                Data.ByteString.Builder.Prim.Internal.Floating
                Data.ByteString.Builder.Prim.Internal.UncheckedShifts
                Data.ByteString.Builder.Prim.Internal.Base16
hs-libraries: HSbytestring-0.10.8.2
includes:
    fpstring.h
depends:
    base-4.12.0.0 deepseq-1.4.4.0 ghc-prim-0.5.3 integer-gmp-1.0.2.0
---
name: containers
version: 0.6.0.1
id: containers-0.6.0.1
key: containers-0.6.0.1
license: BSD-3-Clause
maintainer: libraries@haskell.org
synopsis: Assorted concrete container types
description:
    .
    This package contains efficient general-purpose implementations
    of various immutable container types including sets, maps, sequences,
    trees, and graphs.
    .
    For a walkthrough of what this package provides with examples of common
    operations see the [containers
    introduction](https://haskell-containers.readthedocs.io).
    .
    The declared cost of each operation is either worst-case or amortized, but
    remains valid even if structures are shared.
category: Data Structures
exposed: True
exposed-modules:
    Data.Containers.ListUtils Data.Graph Data.IntMap
    Data.IntMap.Internal Data.IntMap.Internal.Debug Data.IntMap.Lazy
    Data.IntMap.Merge.Lazy Data.IntMap.Merge.Strict Data.IntMap.Strict
    Data.IntSet Data.IntSet.Internal Data.Map Data.Map.Internal
    Data.Map.Internal.Debug Data.Map.Lazy Data.Map.Merge.Lazy
    Data.Map.Merge.Strict Data.Map.Strict Data.Map.Strict.Internal
    Data.Sequence Data.Sequence.Internal Data.Sequence.Internal.Sorting
    Data.Set Data.Set.Internal Data.Tree
    Utils.Containers.Internal.BitQueue
    Utils.Containers.Internal.BitUtil
    Utils.Containers.Internal.StrictPair
hidden-modules: Utils.Containers.Internal.State
                Utils.Containers.Internal.StrictMaybe
                Utils.Containers.Internal.PtrEquality
                Utils.Containers.Internal.Coercions
                Utils.Containers.Internal.TypeError
                Data.Map.Internal.DeprecatedShowTree
                Data.IntMap.Internal.DeprecatedDebug
hs-libraries: HScontainers-0.6.0.1
depends:
    array-0.5.3.0 base-4.12.0.0 deepseq-1.4.4.0 ghc-prim-0.5.3
---
name: deepseq
version: 1.4.4.0
id: deepseq-1.4.4.0
key: deepseq-1.4.4.0
license: BSD-3-Clause
maintainer: libraries@haskell.org
synopsis: Deep evaluation of data structures
description:
    This package provides methods for fully evaluating data structures
    (\"deep evaluation\"). Deep evaluation is often used for adding
    strictness to a program, e.g. in order to force pending exceptions,
    remove space leaks, or force lazy I/O to happen. It is also useful
    in parallel programs, to ensure pending work does not migrate to the
    wrong thread.
    .
    The primary use of this package is via the 'deepseq' function, a
    \"deep\" version of 'seq'. It is implemented on top of an 'NFData'
    typeclass (\"Normal Form Data\", data structures with no unevaluated
    components) which defines strategies for fully evaluating different
    data types. See module documentation in "Control.DeepSeq" for more
    details.
category: Control
exposed: True
exposed-modules:
    Control.DeepSeq
hidden-modules: Control.DeepSeq.BackDoor
hs-libraries: HSdeepseq-1.4.4.0
depends:
    array-0.5.3.0 base-4.12.0.0
---
name: directory
version: 1.3.3.0
id: directory-1.3.3.0
key: directory-1.3.3.0
license: BSD-3-Clause
maintainer: libraries@haskell.org
synopsis: Platform-agnostic library for filesystem operations
description:
    This library provides a basic set of operations for manipulating files and
    directories in a portable way.
category: System
exposed: True
exposed-modules:
    System.Directory System.Directory.Internal
    System.Directory.Internal.Prelude
hidden-modules: System.Directory.Internal.C_utimensat
                System.Directory.Internal.Common System.Directory.Internal.Config
                System.Directory.Internal.Posix System.Directory.Internal.Windows
hs-libraries: HSdirectory-1.3.3.0
depends:
    Win32-2.6.1.0 base-4.12.0.0 filepath-1.4.2.1 time-1.8.0.2
---
name: filepath
version: 1.4.2.1
id: filepath-1.4.2.1
key: filepath-1.4.2.1
license: BSD-3-Clause
copyright: Neil Mitchell 2005-2018
maintainer: Neil Mitchell <ndmitchell@gmail.com>
author: Neil Mitchell <ndmitchell@gmail.com>
homepage: https://github.com/haskell/filepath#readme
synopsis: Library for manipulating FilePaths in a cross platform way.
description:
    This package provides functionality for manipulating @FilePath@ values, and is shipped with both <https://www.haskell.org/ghc/ GHC> and the <https://www.haskell.org/platform/ Haskell Platform>. It provides three modules:
    .
    * "System.FilePath.Posix" manipulates POSIX\/Linux style @FilePath@ values (with @\/@ as the path separator).
    .
    * "System.FilePath.Windows" manipulates Windows style @FilePath@ values (with either @\\@ or @\/@ as the path separator, and deals with drives).
    .
    * "System.FilePath" is an alias for the module appropriate to your platform.
    .
    All three modules provide the same API, and the same documentation (calling out differences in the different variants).
category: System
exposed: True
exposed-modules:
    System.FilePath System.FilePath.Posix System.FilePath.Windows
hs-libraries: HSfilepath-1.4.2.1
depends:
    base-4.12.0.0
---
name: ghc-boot
version: 8.6.5
id: ghc-boot-8.6.5
key: ghc-boot-8.6.5
license: BSD-3-Clause
maintainer: ghc-devs@haskell.org
synopsis: Shared functionality between GHC and its boot libraries
description:
    This library is shared between GHC, ghc-pkg, and other boot
    libraries.
    .
    A note about "GHC.PackageDb": it only deals with the subset of
    the package database that the compiler cares about: modules
    paths etc and not package metadata like description, authors
    etc. It is thus not a library interface to ghc-pkg and is *not*
    suitable for modifying GHC package databases.
    .
    The package database format and this library are constructed in
    such a way that while ghc-pkg depends on Cabal, the GHC library
    and program do not have to depend on Cabal.
category: GHC
exposed: True
exposed-modules:
    GHC.ForeignSrcLang GHC.HandleEncoding GHC.LanguageExtensions
    GHC.PackageDb GHC.Serialized
hs-libraries: HSghc-boot-8.6.5
depends:
    base-4.12.0.0 binary-0.8.6.0 bytestring-0.10.8.2 directory-1.3.3.0
    filepath-1.4.2.1 ghc-boot-th-8.6.5
---
name: ghc-boot-th
version: 8.6.5
id: ghc-boot-th-8.6.5
key: ghc-boot-th-8.6.5
license: BSD-3-Clause
maintainer: ghc-devs@haskell.org
synopsis: Shared functionality between GHC and the @template-haskell@
          library
description:
    This library contains various bits shared between the @ghc@ and
    @template-haskell@ libraries.
    .
    This package exists to ensure that @template-haskell@ has a
    minimal set of transitive dependencies, since it is intended to
    be depended upon by user code.
category: GHC
exposed: True
exposed-modules:
    GHC.ForeignSrcLang.Type GHC.LanguageExtensions.Type GHC.Lexeme
hs-libraries: HSghc-boot-th-8.6.5
depends:
    base-4.12.0.0
---
name: ghc-compact
version: 0.1.0.0
id: ghc-compact-0.1.0.0
key: ghc-compact-0.1.0.0
license: BSD-3-Clause
maintainer: libraries@haskell.org
synopsis: In memory storage of deeply evaluated data structure
description:
    This package provides minimal functionality for working with
    "compact regions", which hold a fully evaluated Haskell object graph.
    These regions maintain the invariant that no pointers live inside the struct
    that point outside it, which ensures efficient garbage collection without
    ever reading the structure contents (effectively, it works as a manually
    managed "oldest generation" which is never freed until the whole is
    released).
    Internally, the struct is stored a single contiguous block of memory,
    which allows efficient serialization and deserialization of structs
    for distributed computing.
category: Data
exposed: True
exposed-modules:
    GHC.Compact GHC.Compact.Serialized
hs-libraries: HSghc-compact-0.1.0.0
depends:
    base-4.12.0.0 bytestring-0.10.8.2 ghc-prim-0.5.3
---
name: ghc-heap
version: 8.6.5
id: ghc-heap-8.6.5
key: ghc-heap-8.6.5
license: BSD-3-Clause
maintainer: libraries@haskell.org
synopsis: Functions for walking GHC's heap
description:
    This package provides functions for walking the GHC heap data structures
    and retrieving information about those data structures.
category: GHC
exposed: True
exposed-modules:
    GHC.Exts.Heap GHC.Exts.Heap.ClosureTypes GHC.Exts.Heap.Closures
    GHC.Exts.Heap.Constants GHC.Exts.Heap.InfoTable
    GHC.Exts.Heap.InfoTable.Types GHC.Exts.Heap.InfoTableProf
    GHC.Exts.Heap.Utils
hs-libraries: HSghc-heap-8.6.5
depends:
    base-4.12.0.0 ghc-prim-0.5.3 rts
---
name: ghc-prim
version: 0.5.3
id: ghc-prim-0.5.3
key: ghc-prim-0.5.3
license: BSD-3-Clause
maintainer: libraries@haskell.org
synopsis: GHC primitives
description:
    This package contains the primitive types and operations supplied by GHC.
category: GHC
exposed: True
exposed-modules:
    GHC.CString GHC.Classes GHC.Debug GHC.IntWord64 GHC.Magic
    GHC.PrimopWrappers GHC.Tuple GHC.Types GHC.Prim
hs-libraries: HSghc-prim-0.5.3
extra-libraries:
    user32 mingw32 mingwex
depends:
    rts
---
name: ghci
version: 8.6.5
id: ghci-8.6.5
key: ghci-8.6.5
license: BSD-3-Clause
maintainer: ghc-devs@haskell.org
synopsis: The library supporting GHC's interactive interpreter
description:
    This library offers interfaces which mediate interactions between the
    @ghci@ interactive shell and @iserv@, GHC's out-of-process interpreter
    backend.
category: GHC
exposed: True
exposed-modules:
    GHCi.BinaryArray GHCi.BreakArray GHCi.CreateBCO GHCi.FFI
    GHCi.InfoTable GHCi.Message GHCi.ObjLink GHCi.RemoteTypes
    GHCi.ResolvedBCO GHCi.Run GHCi.Signals GHCi.StaticPtrTable GHCi.TH
    GHCi.TH.Binary SizedSeq
hs-libraries: HSghci-8.6.5
depends:
    array-0.5.3.0 base-4.12.0.0 binary-0.8.6.0 bytestring-0.10.8.2
    containers-0.6.0.1 deepseq-1.4.4.0 filepath-1.4.2.1 ghc-boot-8.6.5
    ghc-boot-th-8.6.5 ghc-heap-8.6.5 template-haskell-2.14.0.0
    transformers-0.5.6.2
---
name: haskeline
version: 0.7.4.3
id: haskeline-0.7.4.3
key: haskeline-0.7.4.3
license: BSD-3-Clause
copyright: (c) Judah Jacobson
maintainer: Judah Jacobson <judah.jacobson@gmail.com>
author: Judah Jacobson
stability: Stable
homepage: https://github.com/judah/haskeline
synopsis: A command-line interface for user input, written in Haskell.
description:
    Haskeline provides a user interface for line input in command-line
    programs.  This library is similar in purpose to readline, but since
    it is written in Haskell it is (hopefully) more easily used in other
    Haskell programs.
    .
    Haskeline runs both on POSIX-compatible systems and on Windows.
category: User Interfaces
exposed: True
exposed-modules:
    System.Console.Haskeline System.Console.Haskeline.Completion
    System.Console.Haskeline.History System.Console.Haskeline.IO
    System.Console.Haskeline.MonadException
hidden-modules: System.Console.Haskeline.Backend
                System.Console.Haskeline.Backend.WCWidth
                System.Console.Haskeline.Command
                System.Console.Haskeline.Command.Completion
                System.Console.Haskeline.Command.History
                System.Console.Haskeline.Command.KillRing
                System.Console.Haskeline.Directory System.Console.Haskeline.Emacs
                System.Console.Haskeline.InputT System.Console.Haskeline.Key
                System.Console.Haskeline.LineState System.Console.Haskeline.Monads
                System.Console.Haskeline.Prefs System.Console.Haskeline.Recover
                System.Console.Haskeline.RunCommand System.Console.Haskeline.Term
                System.Console.Haskeline.Command.Undo System.Console.Haskeline.Vi
                System.Console.Haskeline.Backend.Win32
                System.Console.Haskeline.Backend.Win32.Echo
hs-libraries: HShaskeline-0.7.4.3
includes:
    win_console.h windows_cconv.h
depends:
    Win32-2.6.1.0 base-4.12.0.0 bytestring-0.10.8.2 containers-0.6.0.1
    directory-1.3.3.0 filepath-1.4.2.1 process-1.6.5.0 stm-2.5.0.0
    transformers-0.5.6.2
---
name: hpc
version: 0.6.0.3
id: hpc-0.6.0.3
key: hpc-0.6.0.3
license: BSD-3-Clause
maintainer: ghc-devs@haskell.org
author: Andy Gill
synopsis: Code Coverage Library for Haskell
description:
    This package provides the code coverage library for Haskell.
    .
    See <http://www.haskell.org/haskellwiki/Haskell_program_coverage> for more
    information.
category: Control
exposed: True
exposed-modules:
    Trace.Hpc.Mix Trace.Hpc.Reflect Trace.Hpc.Tix Trace.Hpc.Util
hs-libraries: HShpc-0.6.0.3
depends:
    base-4.12.0.0 containers-0.6.0.1 directory-1.3.3.0 filepath-1.4.2.1
    time-1.8.0.2
---
name: integer-gmp
version: 1.0.2.0
id: integer-gmp-1.0.2.0
key: integer-gmp-1.0.2.0
license: BSD-3-Clause
maintainer: hvr@gnu.org
author: Herbert Valerio Riedel
synopsis: Integer library based on GMP
description:
    This package provides the low-level implementation of the standard
    'Integer' type based on the
    <http://gmplib.org/ GNU Multiple Precision Arithmetic Library (GMP)>.
    .
    This package provides access to the internal representation of
    'Integer' as well as primitive operations with no proper error
    handling, and should only be used directly with the utmost care.
category: Numeric, Algebra
exposed: True
exposed-modules:
    GHC.Integer GHC.Integer.GMP.Internals GHC.Integer.Logarithms
    GHC.Integer.Logarithms.Internals
hidden-modules: GHC.Integer.Type
hs-libraries: HSinteger-gmp-1.0.2.0
extra-libraries:
    gmp
depends:
    ghc-prim-0.5.3
---
name: libiserv
version: 8.6.5
id: libiserv-8.6.5
key: libiserv-8.6.5
license: BSD-3-Clause
copyright: XXX
maintainer: XXX
author: XXX
synopsis: Provides shared functionality between iserv and iserv-proxy
category: Development
exposed: True
exposed-modules:
    GHCi.Utils Lib
hs-libraries: HSlibiserv-8.6.5
depends:
    base-4.12.0.0 binary-0.8.6.0 bytestring-0.10.8.2 containers-0.6.0.1
    deepseq-1.4.4.0 ghci-8.6.5
---
name: mtl
version: 2.2.2
id: mtl-2.2.2
key: mtl-2.2.2
license: BSD-3-Clause
maintainer: Edward Kmett <ekmett@gmail.com>
author: Andy Gill
homepage: http://github.com/haskell/mtl
synopsis: Monad classes, using functional dependencies
description:
    Monad classes using functional dependencies, with instances
    for various monad transformers, inspired by the paper
    /Functional Programming with Overloading and Higher-Order Polymorphism/,
    by Mark P Jones, in /Advanced School of Functional Programming/, 1995
    (<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).
category: Control
exposed: True
exposed-modules:
    Control.Monad.Cont Control.Monad.Cont.Class Control.Monad.Error
    Control.Monad.Error.Class Control.Monad.Except
    Control.Monad.Identity Control.Monad.List Control.Monad.RWS
    Control.Monad.RWS.Class Control.Monad.RWS.Lazy
    Control.Monad.RWS.Strict Control.Monad.Reader
    Control.Monad.Reader.Class Control.Monad.State
    Control.Monad.State.Class Control.Monad.State.Lazy
    Control.Monad.State.Strict Control.Monad.Trans Control.Monad.Writer
    Control.Monad.Writer.Class Control.Monad.Writer.Lazy
    Control.Monad.Writer.Strict
hs-libraries: HSmtl-2.2.2
depends:
    base-4.12.0.0 transformers-0.5.6.2
---
name: parsec
version: 3.1.13.0
id: parsec-3.1.13.0
key: parsec-3.1.13.0
license: BSD-3-Clause
maintainer: Herbert Valerio Riedel <hvr@gnu.org>
author: Daan Leijen <daan@microsoft.com>, Paolo Martini <paolo@nemail.it>, Antoine Latter <aslatter@gmail.com>
homepage: https://github.com/haskell/parsec
synopsis: Monadic parser combinators
description:
    Parsec is designed from scratch as an industrial-strength parser
    library.  It is simple, safe, well documented (on the package
    homepage), has extensive libraries, good error messages,
    and is fast.  It is defined as a monad transformer that can be
    stacked on arbitrary monads, and it is also parametric in the
    input stream type.
    .
    The main entry point is the "Text.Parsec" module which provides
    defaults for parsing 'Char'acter data.
    .
    The "Text.ParserCombinators.Parsec" module hierarchy contains
    the legacy @parsec-2@ API and may be removed at some point in
    the future.
category: Parsing
exposed: True
exposed-modules:
    Text.Parsec Text.Parsec.ByteString Text.Parsec.ByteString.Lazy
    Text.Parsec.Char Text.Parsec.Combinator Text.Parsec.Error
    Text.Parsec.Expr Text.Parsec.Language Text.Parsec.Perm
    Text.Parsec.Pos Text.Parsec.Prim Text.Parsec.String
    Text.Parsec.Text Text.Parsec.Text.Lazy Text.Parsec.Token
    Text.ParserCombinators.Parsec Text.ParserCombinators.Parsec.Char
    Text.ParserCombinators.Parsec.Combinator
    Text.ParserCombinators.Parsec.Error
    Text.ParserCombinators.Parsec.Expr
    Text.ParserCombinators.Parsec.Language
    Text.ParserCombinators.Parsec.Perm
    Text.ParserCombinators.Parsec.Pos
    Text.ParserCombinators.Parsec.Prim
    Text.ParserCombinators.Parsec.Token
hs-libraries: HSparsec-3.1.13.0
depends:
    base-4.12.0.0 bytestring-0.10.8.2 mtl-2.2.2 text-1.2.3.1
---
name: pretty
version: 1.1.3.6
id: pretty-1.1.3.6
key: pretty-1.1.3.6
license: BSD-3-Clause
maintainer: David Terei <code@davidterei.com>
stability: Stable
homepage: http://github.com/haskell/pretty
synopsis: Pretty-printing library
description:
    This package contains a pretty-printing library, a set of API's
    that provides a way to easily print out text in a consistent
    format of your choosing. This is useful for compilers and related
    tools.
    .
    This library was originally designed by John Hughes's and has since
    been heavily modified by Simon Peyton Jones.
category: Text
exposed: True
exposed-modules:
    Text.PrettyPrint Text.PrettyPrint.Annotated
    Text.PrettyPrint.Annotated.HughesPJ
    Text.PrettyPrint.Annotated.HughesPJClass Text.PrettyPrint.HughesPJ
    Text.PrettyPrint.HughesPJClass
hs-libraries: HSpretty-1.1.3.6
depends:
    base-4.12.0.0 deepseq-1.4.4.0 ghc-prim-0.5.3
---
name: process
version: 1.6.5.0
id: process-1.6.5.0
key: process-1.6.5.0
license: BSD-3-Clause
maintainer: libraries@haskell.org
synopsis: Process libraries
description:
    This package contains libraries for dealing with system processes.
    .
    The typed-process package is a more recent take on a process API,
    which uses this package internally. It features better binary
    support, easier concurrency, and a more composable API. You can
    read more about it at
    <https://haskell-lang.org/library/typed-process>.
category: System
exposed: True
exposed-modules:
    System.Cmd System.Process System.Process.Internals
hidden-modules: System.Process.Common System.Process.Windows
hs-libraries: HSprocess-1.6.5.0
extra-libraries:
    kernel32
includes:
    runProcess.h
depends:
    Win32-2.6.1.0 base-4.12.0.0 deepseq-1.4.4.0 directory-1.3.3.0
    filepath-1.4.2.1
---
name: rts
version: 1.0
id: rts
key: rts
license: BSD-3-Clause
maintainer: glasgow-haskell-users@haskell.org
exposed: True
hs-libraries: HSrts
extra-libraries:
    m ffi wsock32 gdi32 winmm dbghelp psapi
includes:
    Stg.h
ld-options: "-Wl,-u,base_GHCziTopHandler_runIO_closure"
            "-Wl,-u,base_GHCziTopHandler_runNonIO_closure"
            "-Wl,-u,ghczmprim_GHCziTuple_Z0T_closure"
            "-Wl,-u,ghczmprim_GHCziTypes_True_closure"
            "-Wl,-u,ghczmprim_GHCziTypes_False_closure"
            "-Wl,-u,base_GHCziPack_unpackCString_closure"
            "-Wl,-u,base_GHCziWeak_runFinalizzerBatch_closure"
            "-Wl,-u,base_GHCziIOziException_stackOverflow_closure"
            "-Wl,-u,base_GHCziIOziException_heapOverflow_closure"
            "-Wl,-u,base_GHCziIOziException_allocationLimitExceeded_closure"
            "-Wl,-u,base_GHCziIOziException_blockedIndefinitelyOnMVar_closure"
            "-Wl,-u,base_GHCziIOziException_blockedIndefinitelyOnSTM_closure"
            "-Wl,-u,base_GHCziIOziException_cannotCompactFunction_closure"
            "-Wl,-u,base_GHCziIOziException_cannotCompactPinned_closure"
            "-Wl,-u,base_GHCziIOziException_cannotCompactMutable_closure"
            "-Wl,-u,base_ControlziExceptionziBase_absentSumFieldError_closure"
            "-Wl,-u,base_ControlziExceptionziBase_nonTermination_closure"
            "-Wl,-u,base_ControlziExceptionziBase_nestedAtomically_closure"
            "-Wl,-u,base_GHCziEventziThread_blockedOnBadFD_closure"
            "-Wl,-u,base_GHCziConcziSync_runSparks_closure"
            "-Wl,-u,base_GHCziConcziIO_ensureIOManagerIsRunning_closure"
            "-Wl,-u,base_GHCziConcziIO_ioManagerCapabilitiesChanged_closure"
            "-Wl,-u,base_GHCziConcziSignal_runHandlersPtr_closure"
            "-Wl,-u,base_GHCziTopHandler_flushStdHandles_closure"
            "-Wl,-u,base_GHCziTopHandler_runMainIO_closure"
            "-Wl,-u,ghczmprim_GHCziTypes_Czh_con_info"
            "-Wl,-u,ghczmprim_GHCziTypes_Izh_con_info"
            "-Wl,-u,ghczmprim_GHCziTypes_Fzh_con_info"
            "-Wl,-u,ghczmprim_GHCziTypes_Dzh_con_info"
            "-Wl,-u,ghczmprim_GHCziTypes_Wzh_con_info"
            "-Wl,-u,base_GHCziPtr_Ptr_con_info"
            "-Wl,-u,base_GHCziPtr_FunPtr_con_info"
            "-Wl,-u,base_GHCziInt_I8zh_con_info"
            "-Wl,-u,base_GHCziInt_I16zh_con_info"
            "-Wl,-u,base_GHCziInt_I32zh_con_info"
            "-Wl,-u,base_GHCziInt_I64zh_con_info"
            "-Wl,-u,base_GHCziWord_W8zh_con_info"
            "-Wl,-u,base_GHCziWord_W16zh_con_info"
            "-Wl,-u,base_GHCziWord_W32zh_con_info"
            "-Wl,-u,base_GHCziWord_W64zh_con_info"
            "-Wl,-u,base_GHCziStable_StablePtr_con_info"
            "-Wl,-u,hs_atomic_add8" "-Wl,-u,hs_atomic_add16"
            "-Wl,-u,hs_atomic_add32" "-Wl,-u,hs_atomic_add64"
            "-Wl,-u,hs_atomic_sub8" "-Wl,-u,hs_atomic_sub16"
            "-Wl,-u,hs_atomic_sub32" "-Wl,-u,hs_atomic_sub64"
            "-Wl,-u,hs_atomic_and8" "-Wl,-u,hs_atomic_and16"
            "-Wl,-u,hs_atomic_and32" "-Wl,-u,hs_atomic_and64"
            "-Wl,-u,hs_atomic_nand8" "-Wl,-u,hs_atomic_nand16"
            "-Wl,-u,hs_atomic_nand32" "-Wl,-u,hs_atomic_nand64"
            "-Wl,-u,hs_atomic_or8" "-Wl,-u,hs_atomic_or16"
            "-Wl,-u,hs_atomic_or32" "-Wl,-u,hs_atomic_or64"
            "-Wl,-u,hs_atomic_xor8" "-Wl,-u,hs_atomic_xor16"
            "-Wl,-u,hs_atomic_xor32" "-Wl,-u,hs_atomic_xor64"
            "-Wl,-u,hs_cmpxchg8" "-Wl,-u,hs_cmpxchg16" "-Wl,-u,hs_cmpxchg32"
            "-Wl,-u,hs_cmpxchg64" "-Wl,-u,hs_atomicread8"
            "-Wl,-u,hs_atomicread16" "-Wl,-u,hs_atomicread32"
            "-Wl,-u,hs_atomicread64" "-Wl,-u,hs_atomicwrite8"
            "-Wl,-u,hs_atomicwrite16" "-Wl,-u,hs_atomicwrite32"
            "-Wl,-u,hs_atomicwrite64"
---
name: stm
version: 2.5.0.0
id: stm-2.5.0.0
key: stm-2.5.0.0
license: BSD-3-Clause
maintainer: libraries@haskell.org
homepage: https://wiki.haskell.org/Software_transactional_memory
synopsis: Software Transactional Memory
description:
    Software Transactional Memory, or STM, is an abstraction for
    concurrent communication. The main benefits of STM are
    /composability/ and /modularity/. That is, using STM you can write
    concurrent abstractions that can be easily composed with any other
    abstraction built using STM, without exposing the details of how
    your abstraction ensures safety. This is typically not the case
    with other forms of concurrent communication, such as locks or
    'MVar's.
category: Concurrency
exposed: True
exposed-modules:
    Control.Concurrent.STM Control.Concurrent.STM.TArray
    Control.Concurrent.STM.TBQueue Control.Concurrent.STM.TChan
    Control.Concurrent.STM.TMVar Control.Concurrent.STM.TQueue
    Control.Concurrent.STM.TSem Control.Concurrent.STM.TVar
    Control.Monad.STM
hidden-modules: Control.Sequential.STM
hs-libraries: HSstm-2.5.0.0
depends:
    array-0.5.3.0 base-4.12.0.0
---
name: template-haskell
version: 2.14.0.0
id: template-haskell-2.14.0.0
key: template-haskell-2.14.0.0
license: BSD-3-Clause
maintainer: libraries@haskell.org
synopsis: Support library for Template Haskell
description:
    This package provides modules containing facilities for manipulating
    Haskell source code using Template Haskell.
    .
    See <http://www.haskell.org/haskellwiki/Template_Haskell> for more
    information.
category: Template Haskell
exposed: True
exposed-modules:
    Language.Haskell.TH Language.Haskell.TH.LanguageExtensions
    Language.Haskell.TH.Lib Language.Haskell.TH.Lib.Internal
    Language.Haskell.TH.Ppr Language.Haskell.TH.PprLib
    Language.Haskell.TH.Quote Language.Haskell.TH.Syntax
hidden-modules: Language.Haskell.TH.Lib.Map
hs-libraries: HStemplate-haskell-2.14.0.0
depends:
    base-4.12.0.0 ghc-boot-th-8.6.5 pretty-1.1.3.6
---
name: text
version: 1.2.3.1
id: text-1.2.3.1
key: text-1.2.3.1
license: BSD-2-Clause
copyright: 2009-2011 Bryan O'Sullivan, 2008-2009 Tom Harper
maintainer: Bryan O'Sullivan <bos@serpentine.com>, Herbert Valerio Riedel <hvr@gnu.org>
author: Bryan O'Sullivan <bos@serpentine.com>
homepage: https://github.com/haskell/text
synopsis: An efficient packed Unicode text type.
description:
    .
    An efficient packed, immutable Unicode text type (both strict and
    lazy), with a powerful loop fusion optimization framework.
    .
    The 'Text' type represents Unicode character strings, in a time and
    space-efficient manner. This package provides text processing
    capabilities that are optimized for performance critical use, both
    in terms of large data quantities and high speed.
    .
    The 'Text' type provides character-encoding, type-safe case
    conversion via whole-string case conversion functions (see "Data.Text").
    It also provides a range of functions for converting 'Text' values to
    and from 'ByteStrings', using several standard encodings
    (see "Data.Text.Encoding").
    .
    Efficient locale-sensitive support for text IO is also supported
    (see "Data.Text.IO").
    .
    These modules are intended to be imported qualified, to avoid name
    clashes with Prelude functions, e.g.
    .
    > import qualified Data.Text as T
    .
    To use an extended and very rich family of functions for working
    with Unicode text (including normalization, regular expressions,
    non-standard encodings, text breaking, and locales), see
    the [text-icu package](https://hackage.haskell.org/package/text-icu)
    based on the well-respected and liberally
    licensed [ICU library](http://site.icu-project.org/).
category: Data, Text
exposed: True
exposed-modules:
    Data.Text Data.Text.Array Data.Text.Encoding
    Data.Text.Encoding.Error Data.Text.Foreign Data.Text.IO
    Data.Text.Internal Data.Text.Internal.Builder
    Data.Text.Internal.Builder.Functions
    Data.Text.Internal.Builder.Int.Digits
    Data.Text.Internal.Builder.RealFloat.Functions
    Data.Text.Internal.Encoding.Fusion
    Data.Text.Internal.Encoding.Fusion.Common
    Data.Text.Internal.Encoding.Utf16 Data.Text.Internal.Encoding.Utf32
    Data.Text.Internal.Encoding.Utf8 Data.Text.Internal.Functions
    Data.Text.Internal.Fusion Data.Text.Internal.Fusion.CaseMapping
    Data.Text.Internal.Fusion.Common Data.Text.Internal.Fusion.Size
    Data.Text.Internal.Fusion.Types Data.Text.Internal.IO
    Data.Text.Internal.Lazy Data.Text.Internal.Lazy.Encoding.Fusion
    Data.Text.Internal.Lazy.Fusion Data.Text.Internal.Lazy.Search
    Data.Text.Internal.Private Data.Text.Internal.Read
    Data.Text.Internal.Search Data.Text.Internal.Unsafe
    Data.Text.Internal.Unsafe.Char Data.Text.Internal.Unsafe.Shift
    Data.Text.Lazy Data.Text.Lazy.Builder Data.Text.Lazy.Builder.Int
    Data.Text.Lazy.Builder.RealFloat Data.Text.Lazy.Encoding
    Data.Text.Lazy.IO Data.Text.Lazy.Internal Data.Text.Lazy.Read
    Data.Text.Read Data.Text.Unsafe
hidden-modules: Data.Text.Show
hs-libraries: HStext-1.2.3.1
depends:
    array-0.5.3.0 base-4.12.0.0 binary-0.8.6.0 bytestring-0.10.8.2
    deepseq-1.4.4.0 ghc-prim-0.5.3 integer-gmp-1.0.2.0
---
name: time
version: 1.8.0.2
id: time-1.8.0.2
key: time-1.8.0.2
license: BSD-3-Clause
maintainer: <ashley@semantic.org>
author: Ashley Yakeley
stability: stable
homepage: https://github.com/haskell/time
synopsis: A time library
description:
    A time library
category: Time
exposed: True
exposed-modules:
    Data.Time Data.Time.Calendar Data.Time.Calendar.Easter
    Data.Time.Calendar.Julian Data.Time.Calendar.MonthDay
    Data.Time.Calendar.OrdinalDate Data.Time.Calendar.WeekDate
    Data.Time.Clock Data.Time.Clock.POSIX Data.Time.Clock.System
    Data.Time.Clock.TAI Data.Time.Format Data.Time.LocalTime
hidden-modules: Data.Time.Calendar.Private Data.Time.Calendar.Days
                Data.Time.Calendar.Gregorian Data.Time.Calendar.JulianYearDay
                Data.Time.Clock.Internal.DiffTime
                Data.Time.Clock.Internal.AbsoluteTime
                Data.Time.Clock.Internal.NominalDiffTime
                Data.Time.Clock.Internal.POSIXTime
                Data.Time.Clock.Internal.UniversalTime
                Data.Time.Clock.Internal.SystemTime
                Data.Time.Clock.Internal.UTCTime Data.Time.Clock.Internal.CTimeval
                Data.Time.Clock.Internal.CTimespec Data.Time.Clock.Internal.UTCDiff
                Data.Time.LocalTime.Internal.TimeZone
                Data.Time.LocalTime.Internal.TimeOfDay
                Data.Time.LocalTime.Internal.LocalTime
                Data.Time.LocalTime.Internal.ZonedTime Data.Time.Format.Parse
                Data.Time.Format.Locale
hs-libraries: HStime-1.8.0.2
depends:
    Win32-2.6.1.0 base-4.12.0.0 deepseq-1.4.4.0
---
name: transformers
version: 0.5.6.2
id: transformers-0.5.6.2
key: transformers-0.5.6.2
license: BSD-3-Clause
maintainer: Ross Paterson <R.Paterson@city.ac.uk>
author: Andy Gill, Ross Paterson
synopsis: Concrete functor and monad transformers
description:
    A portable library of functor and monad transformers, inspired by
    the paper
    .
    * \"Functional Programming with Overloading and Higher-Order
    Polymorphism\", by Mark P Jones,
    in /Advanced School of Functional Programming/, 1995
    (<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).
    .
    This package contains:
    .
    * the monad transformer class (in "Control.Monad.Trans.Class")
    .
    * concrete functor and monad transformers, each with associated
    operations and functions to lift operations associated with other
    transformers.
    .
    The package can be used on its own in portable Haskell code, in
    which case operations need to be manually lifted through transformer
    stacks (see "Control.Monad.Trans.Class" for some examples).
    Alternatively, it can be used with the non-portable monad classes in
    the @mtl@ or @monads-tf@ packages, which automatically lift operations
    introduced by monad transformers through other transformers.
category: Control
exposed: True
exposed-modules:
    Control.Applicative.Backwards Control.Applicative.Lift
    Control.Monad.Signatures Control.Monad.Trans.Accum
    Control.Monad.Trans.Class Control.Monad.Trans.Cont
    Control.Monad.Trans.Error Control.Monad.Trans.Except
    Control.Monad.Trans.Identity Control.Monad.Trans.List
    Control.Monad.Trans.Maybe Control.Monad.Trans.RWS
    Control.Monad.Trans.RWS.CPS Control.Monad.Trans.RWS.Lazy
    Control.Monad.Trans.RWS.Strict Control.Monad.Trans.Reader
    Control.Monad.Trans.Select Control.Monad.Trans.State
    Control.Monad.Trans.State.Lazy Control.Monad.Trans.State.Strict
    Control.Monad.Trans.Writer Control.Monad.Trans.Writer.CPS
    Control.Monad.Trans.Writer.Lazy Control.Monad.Trans.Writer.Strict
    Data.Functor.Constant Data.Functor.Reverse
hs-libraries: HStransformers-0.5.6.2
depends:
    base-4.12.0.0
