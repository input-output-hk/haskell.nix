{ system
  , compiler
  , flags
  , pkgs
  , hsPkgs
  , pkgconfPkgs
  , errorHandler
  , config
  , ... }:
  ({
    flags = {};
    package = {
      specVersion = "1.8";
      identifier = { name = "base-compat-batteries"; version = "0.10.5"; };
      license = "MIT";
      copyright = "(c) 2012-2018 Simon Hengel,\n(c) 2014-2018 João Cristóvão,\n(c) 2015-2018 Ryan Scott";
      maintainer = "Simon Hengel <sol@typeful.net>,\nJoão Cristóvão <jmacristovao@gmail.com>,\nRyan Scott <ryan.gl.scott@gmail.com>";
      author = "Simon Hengel <sol@typeful.net>,\nJoão Cristóvão <jmacristovao@gmail.com>,\nRyan Scott <ryan.gl.scott@gmail.com>";
      homepage = "";
      url = "";
      synopsis = "base-compat with extra batteries";
      description = "Provides functions available in later versions of @base@ to\na wider range of compilers, without requiring you to use CPP\npragmas in your code.\n\nThis package provides the same API as the\n@<http://hackage.haskell.org/package/base-compat base-compat>@\nlibrary, but depends on compatibility packages\n(such as @semigroups@) to offer a wider support window than\n@base-compat@, which has no dependencies. Most of the modules\nin this library have the same names as in @base-compat@\nto make it easier to switch between the two. There also exist\nversions of each module with the suffix @.Repl.Batteries@,\nwhich are distinct from anything in @base-compat@, to allow\nfor easier use in GHCi.\n\nSee\n@<https://github.com/haskell-compat/base-compat/blob/master/base-compat/README.markdown#dependencies here>@\nfor a more comprehensive list of differences between\n@base-compat@ and @base-compat-batteries@.";
      buildType = "Simple";
      };
    components = {
      "library" = {
        depends = (((([
          (hsPkgs."base" or (errorHandler.buildDepError "base"))
          (hsPkgs."base-compat" or (errorHandler.buildDepError "base-compat"))
          ] ++ (pkgs.lib).optional (!(compiler.isGhc && (compiler.version).ge "7.8")) (hsPkgs."tagged" or (errorHandler.buildDepError "tagged"))) ++ (pkgs.lib).optionals (!(compiler.isGhc && (compiler.version).ge "7.10")) [
          (hsPkgs."nats" or (errorHandler.buildDepError "nats"))
          (hsPkgs."void" or (errorHandler.buildDepError "void"))
          ]) ++ (pkgs.lib).optionals (!(compiler.isGhc && (compiler.version).ge "8.0")) [
          (hsPkgs."fail" or (errorHandler.buildDepError "fail"))
          (hsPkgs."semigroups" or (errorHandler.buildDepError "semigroups"))
          (hsPkgs."transformers" or (errorHandler.buildDepError "transformers"))
          (hsPkgs."transformers-compat" or (errorHandler.buildDepError "transformers-compat"))
          ]) ++ (pkgs.lib).optional (!(compiler.isGhc && (compiler.version).ge "8.2")) (hsPkgs."bifunctors" or (errorHandler.buildDepError "bifunctors"))) ++ (pkgs.lib).optional (!(compiler.isGhc && (compiler.version).ge "8.6")) (hsPkgs."contravariant" or (errorHandler.buildDepError "contravariant"));
        buildable = true;
        };
      tests = {
        "spec" = {
          depends = [
            (hsPkgs."base" or (errorHandler.buildDepError "base"))
            (hsPkgs."base-compat-batteries" or (errorHandler.buildDepError "base-compat-batteries"))
            (hsPkgs."hspec" or (errorHandler.buildDepError "hspec"))
            (hsPkgs."QuickCheck" or (errorHandler.buildDepError "QuickCheck"))
            ];
          build-tools = [
            (hsPkgs.pkgsBuildBuild.hspec-discover.components.exes.hspec-discover or (pkgs.pkgsBuildBuild.hspec-discover or (errorHandler.buildToolDepError "hspec-discover:hspec-discover")))
            ];
          buildable = true;
          };
        };
      };
    } // {
    src = (pkgs.lib).mkDefault (pkgs.fetchurl {
      url = "http://hackage.haskell.org/package/base-compat-batteries-0.10.5.tar.gz";
      sha256 = "175dcfd1453bd02ec955c05181cbf4278af145183b5899c62d3be29d866170ee";
      });
    }) // {
    package-description-override = "name:             base-compat-batteries\r\nversion:          0.10.5\r\nx-revision: 1\r\nlicense:          MIT\r\nlicense-file:     LICENSE\r\ncopyright:        (c) 2012-2018 Simon Hengel,\r\n                  (c) 2014-2018 João Cristóvão,\r\n                  (c) 2015-2018 Ryan Scott\r\nauthor:           Simon Hengel <sol@typeful.net>,\r\n                  João Cristóvão <jmacristovao@gmail.com>,\r\n                  Ryan Scott <ryan.gl.scott@gmail.com>\r\nmaintainer:       Simon Hengel <sol@typeful.net>,\r\n                  João Cristóvão <jmacristovao@gmail.com>,\r\n                  Ryan Scott <ryan.gl.scott@gmail.com>\r\nbuild-type:       Simple\r\ncabal-version:    >= 1.8\r\ncategory:         Compatibility\r\nsynopsis:         base-compat with extra batteries\r\ndescription:      Provides functions available in later versions of @base@ to\r\n                  a wider range of compilers, without requiring you to use CPP\r\n                  pragmas in your code.\r\n                  .\r\n                  This package provides the same API as the\r\n                  @<http://hackage.haskell.org/package/base-compat base-compat>@\r\n                  library, but depends on compatibility packages\r\n                  (such as @semigroups@) to offer a wider support window than\r\n                  @base-compat@, which has no dependencies. Most of the modules\r\n                  in this library have the same names as in @base-compat@\r\n                  to make it easier to switch between the two. There also exist\r\n                  versions of each module with the suffix @.Repl.Batteries@,\r\n                  which are distinct from anything in @base-compat@, to allow\r\n                  for easier use in GHCi.\r\n                  .\r\n                  See\r\n                  @<https://github.com/haskell-compat/base-compat/blob/master/base-compat/README.markdown#dependencies here>@\r\n                  for a more comprehensive list of differences between\r\n                  @base-compat@ and @base-compat-batteries@.\r\ntested-with:        GHC == 7.0.*\r\n                  , GHC == 7.2.*\r\n                  , GHC == 7.4.*\r\n                  , GHC == 7.6.*\r\n                  , GHC == 7.8.*\r\n                  , GHC == 7.10.*\r\n                  , GHC == 8.0.*\r\n                  , GHC == 8.2.*\r\n                  , GHC == 8.4.*\r\n                  , GHC == 8.6.*\r\nextra-source-files: CHANGES.markdown, README.markdown\r\n\r\nsource-repository head\r\n  type: git\r\n  location: https://github.com/haskell-compat/base-compat\r\n  subdir: base-compat-batteries\r\n\r\nlibrary\r\n  ghc-options:\r\n      -Wall\r\n  build-depends:\r\n      base        >= 4.3 && < 5,\r\n      base-compat == 0.10.5\r\n  if !impl(ghc >= 7.8)\r\n    build-depends:\r\n      tagged >= 0.8.5 && < 0.9\r\n  if !impl(ghc >= 7.10)\r\n    build-depends:\r\n      nats >= 1.1.2 && < 1.2,\r\n      void >= 0.7.2 && < 0.8\r\n  if !impl(ghc >= 8.0)\r\n    build-depends:\r\n      fail                >= 4.9.0.0 && < 4.10,\r\n      semigroups          >= 0.18.4  && < 0.20,\r\n      transformers        >= 0.2     && < 0.6,\r\n      transformers-compat >= 0.6     && < 0.7\r\n  if !impl(ghc >= 8.2)\r\n    build-depends:\r\n      bifunctors >= 5.5.2 && < 5.6\r\n  if !impl(ghc >= 8.6)\r\n    build-depends:\r\n      contravariant >= 1.5 && < 1.6\r\n  ghc-options:\r\n      -fno-warn-duplicate-exports\r\n\r\n  hs-source-dirs:\r\n      src\r\n\r\n  exposed-modules:\r\n      Control.Concurrent.Compat\r\n      Control.Concurrent.MVar.Compat\r\n      Control.Exception.Compat\r\n      Control.Monad.Compat\r\n      Control.Monad.Fail.Compat\r\n      Control.Monad.IO.Class.Compat\r\n      Control.Monad.ST.Lazy.Unsafe.Compat\r\n      Control.Monad.ST.Unsafe.Compat\r\n      Data.Bifoldable.Compat\r\n      Data.Bifunctor.Compat\r\n      Data.Bitraversable.Compat\r\n      Data.Bits.Compat\r\n      Data.Bool.Compat\r\n      Data.Complex.Compat\r\n      Data.Either.Compat\r\n      Data.Foldable.Compat\r\n      Data.Function.Compat\r\n      Data.Functor.Compat\r\n      Data.Functor.Compose.Compat\r\n      Data.Functor.Const.Compat\r\n      Data.Functor.Contravariant.Compat\r\n      Data.Functor.Identity.Compat\r\n      Data.Functor.Product.Compat\r\n      Data.Functor.Sum.Compat\r\n      Data.IORef.Compat\r\n      Data.List.Compat\r\n      Data.List.NonEmpty.Compat\r\n      Data.Monoid.Compat\r\n      Data.Proxy.Compat\r\n      Data.Ratio.Compat\r\n      Data.Semigroup.Compat\r\n      Data.STRef.Compat\r\n      Data.String.Compat\r\n      Data.Type.Coercion.Compat\r\n      Data.Version.Compat\r\n      Data.Void.Compat\r\n      Data.Word.Compat\r\n      Debug.Trace.Compat\r\n      Foreign.Compat\r\n      Foreign.ForeignPtr.Compat\r\n      Foreign.ForeignPtr.Safe.Compat\r\n      Foreign.ForeignPtr.Unsafe.Compat\r\n      Foreign.Marshal.Alloc.Compat\r\n      Foreign.Marshal.Array.Compat\r\n      Foreign.Marshal.Compat\r\n      Foreign.Marshal.Safe.Compat\r\n      Foreign.Marshal.Unsafe.Compat\r\n      Foreign.Marshal.Utils.Compat\r\n      Numeric.Compat\r\n      Numeric.Natural.Compat\r\n      Prelude.Compat\r\n      System.Environment.Compat\r\n      System.Exit.Compat\r\n      System.IO.Unsafe.Compat\r\n      Text.Read.Compat\r\n      Type.Reflection.Compat\r\n\r\n      Control.Concurrent.Compat.Repl.Batteries\r\n      Control.Concurrent.MVar.Compat.Repl.Batteries\r\n      Control.Exception.Compat.Repl.Batteries\r\n      Control.Monad.Compat.Repl.Batteries\r\n      Control.Monad.Fail.Compat.Repl.Batteries\r\n      Control.Monad.IO.Class.Compat.Repl.Batteries\r\n      Control.Monad.ST.Lazy.Unsafe.Compat.Repl.Batteries\r\n      Control.Monad.ST.Unsafe.Compat.Repl.Batteries\r\n      Data.Bifoldable.Compat.Repl.Batteries\r\n      Data.Bifunctor.Compat.Repl.Batteries\r\n      Data.Bitraversable.Compat.Repl.Batteries\r\n      Data.Bits.Compat.Repl.Batteries\r\n      Data.Bool.Compat.Repl.Batteries\r\n      Data.Complex.Compat.Repl.Batteries\r\n      Data.Either.Compat.Repl.Batteries\r\n      Data.Foldable.Compat.Repl.Batteries\r\n      Data.Function.Compat.Repl.Batteries\r\n      Data.Functor.Compat.Repl.Batteries\r\n      Data.Functor.Compose.Compat.Repl.Batteries\r\n      Data.Functor.Const.Compat.Repl.Batteries\r\n      Data.Functor.Identity.Compat.Repl.Batteries\r\n      Data.Functor.Contravariant.Compat.Repl.Batteries\r\n      Data.Functor.Product.Compat.Repl.Batteries\r\n      Data.Functor.Sum.Compat.Repl.Batteries\r\n      Data.IORef.Compat.Repl.Batteries\r\n      Data.List.Compat.Repl.Batteries\r\n      Data.List.NonEmpty.Compat.Repl.Batteries\r\n      Data.Monoid.Compat.Repl.Batteries\r\n      Data.Proxy.Compat.Repl.Batteries\r\n      Data.Ratio.Compat.Repl.Batteries\r\n      Data.Semigroup.Compat.Repl.Batteries\r\n      Data.STRef.Compat.Repl.Batteries\r\n      Data.String.Compat.Repl.Batteries\r\n      Data.Type.Coercion.Compat.Repl.Batteries\r\n      Data.Version.Compat.Repl.Batteries\r\n      Data.Void.Compat.Repl.Batteries\r\n      Data.Word.Compat.Repl.Batteries\r\n      Debug.Trace.Compat.Repl.Batteries\r\n      Foreign.Compat.Repl.Batteries\r\n      Foreign.ForeignPtr.Compat.Repl.Batteries\r\n      Foreign.ForeignPtr.Safe.Compat.Repl.Batteries\r\n      Foreign.ForeignPtr.Unsafe.Compat.Repl.Batteries\r\n      Foreign.Marshal.Alloc.Compat.Repl.Batteries\r\n      Foreign.Marshal.Array.Compat.Repl.Batteries\r\n      Foreign.Marshal.Compat.Repl.Batteries\r\n      Foreign.Marshal.Safe.Compat.Repl.Batteries\r\n      Foreign.Marshal.Unsafe.Compat.Repl.Batteries\r\n      Foreign.Marshal.Utils.Compat.Repl.Batteries\r\n      Numeric.Compat.Repl.Batteries\r\n      Numeric.Natural.Compat.Repl.Batteries\r\n      Prelude.Compat.Repl.Batteries\r\n      System.Environment.Compat.Repl.Batteries\r\n      System.Exit.Compat.Repl.Batteries\r\n      System.IO.Unsafe.Compat.Repl.Batteries\r\n      Text.Read.Compat.Repl.Batteries\r\n      Type.Reflection.Compat.Repl.Batteries\r\ntest-suite spec\r\n  type:\r\n      exitcode-stdio-1.0\r\n  ghc-options:\r\n      -Wall\r\n  hs-source-dirs:\r\n      test\r\n  main-is:\r\n      Spec.hs\r\n  other-modules:\r\n      Control.Monad.CompatSpec\r\n      Data.Bits.CompatSpec\r\n      Data.Bool.CompatSpec\r\n      Data.Either.CompatSpec\r\n      Data.Foldable.CompatSpec\r\n      Data.Function.CompatSpec\r\n      Data.Functor.CompatSpec\r\n      Data.IORef.CompatSpec\r\n      Data.List.CompatSpec\r\n      Data.Monoid.CompatSpec\r\n      Data.STRef.CompatSpec\r\n      Data.Version.CompatSpec\r\n      Data.Word.CompatSpec\r\n      Foreign.Marshal.Alloc.CompatSpec\r\n      Foreign.Marshal.Utils.CompatSpec\r\n      Numeric.CompatSpec\r\n      Prelude.CompatSpec\r\n      System.Environment.CompatSpec\r\n      Text.Read.CompatSpec\r\n\r\n      -- Other tests\r\n      SafeHaskellSpec\r\n      TestHspecTrustworthy\r\n  build-depends:\r\n      base >= 4.3 && < 5\r\n    , base-compat-batteries\r\n    , hspec >= 1.8\r\n    , QuickCheck\r\n  build-tool-depends:\r\n      hspec-discover:hspec-discover >= 1.8\r\n";
    }