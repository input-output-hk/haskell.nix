{ system
  , compiler
  , flags
  , pkgs
  , hsPkgs
  , pkgconfPkgs
  , errorHandler
  , config
  , ... }:
  ({
    flags = { bundled-binary-generic = false; };
    package = {
      specVersion = "1.10";
      identifier = { name = "Cabal"; version = "3.0.2.0"; };
      license = "BSD-3-Clause";
      copyright = "2003-2019, Cabal Development Team (see AUTHORS file)";
      maintainer = "cabal-devel@haskell.org";
      author = "Cabal Development Team <cabal-devel@haskell.org>";
      homepage = "http://www.haskell.org/cabal/";
      url = "";
      synopsis = "A framework for packaging Haskell software";
      description = "The Haskell Common Architecture for Building Applications and\nLibraries: a framework defining a common interface for authors to more\neasily build their Haskell applications in a portable way.\n\nThe Haskell Cabal is part of a larger infrastructure for distributing,\norganizing, and cataloging Haskell libraries and tools.";
      buildType = "Simple";
      };
    components = {
      "library" = {
        depends = (([
          (hsPkgs."array" or (errorHandler.buildDepError "array"))
          (hsPkgs."base" or (errorHandler.buildDepError "base"))
          (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
          (hsPkgs."containers" or (errorHandler.buildDepError "containers"))
          (hsPkgs."deepseq" or (errorHandler.buildDepError "deepseq"))
          (hsPkgs."directory" or (errorHandler.buildDepError "directory"))
          (hsPkgs."filepath" or (errorHandler.buildDepError "filepath"))
          (hsPkgs."pretty" or (errorHandler.buildDepError "pretty"))
          (hsPkgs."process" or (errorHandler.buildDepError "process"))
          (hsPkgs."time" or (errorHandler.buildDepError "time"))
          (hsPkgs."transformers" or (errorHandler.buildDepError "transformers"))
          (hsPkgs."mtl" or (errorHandler.buildDepError "mtl"))
          (hsPkgs."text" or (errorHandler.buildDepError "text"))
          (hsPkgs."parsec" or (errorHandler.buildDepError "parsec"))
          ] ++ [
          (hsPkgs."binary" or (errorHandler.buildDepError "binary"))
          ]) ++ (if system.isWindows
          then [ (hsPkgs."Win32" or (errorHandler.buildDepError "Win32")) ]
          else [
            (hsPkgs."unix" or (errorHandler.buildDepError "unix"))
            ])) ++ (pkgs.lib).optionals (!(compiler.isGhc && (compiler.version).ge "8.0")) [
          (hsPkgs."fail" or (errorHandler.buildDepError "fail"))
          (hsPkgs."semigroups" or (errorHandler.buildDepError "semigroups"))
          ];
        buildable = true;
        };
      tests = {
        "unit-tests" = {
          depends = [
            (hsPkgs."array" or (errorHandler.buildDepError "array"))
            (hsPkgs."base" or (errorHandler.buildDepError "base"))
            (hsPkgs."binary" or (errorHandler.buildDepError "binary"))
            (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
            (hsPkgs."containers" or (errorHandler.buildDepError "containers"))
            (hsPkgs."directory" or (errorHandler.buildDepError "directory"))
            (hsPkgs."filepath" or (errorHandler.buildDepError "filepath"))
            (hsPkgs."integer-logarithms" or (errorHandler.buildDepError "integer-logarithms"))
            (hsPkgs."tasty" or (errorHandler.buildDepError "tasty"))
            (hsPkgs."tasty-hunit" or (errorHandler.buildDepError "tasty-hunit"))
            (hsPkgs."tasty-quickcheck" or (errorHandler.buildDepError "tasty-quickcheck"))
            (hsPkgs."tagged" or (errorHandler.buildDepError "tagged"))
            (hsPkgs."temporary" or (errorHandler.buildDepError "temporary"))
            (hsPkgs."text" or (errorHandler.buildDepError "text"))
            (hsPkgs."pretty" or (errorHandler.buildDepError "pretty"))
            (hsPkgs."Diff" or (errorHandler.buildDepError "Diff"))
            (hsPkgs."QuickCheck" or (errorHandler.buildDepError "QuickCheck"))
            (hsPkgs."Cabal" or (errorHandler.buildDepError "Cabal"))
            ];
          buildable = true;
          };
        "parser-tests" = {
          depends = [
            (hsPkgs."base" or (errorHandler.buildDepError "base"))
            (hsPkgs."base-compat" or (errorHandler.buildDepError "base-compat"))
            (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
            (hsPkgs."directory" or (errorHandler.buildDepError "directory"))
            (hsPkgs."filepath" or (errorHandler.buildDepError "filepath"))
            (hsPkgs."tasty" or (errorHandler.buildDepError "tasty"))
            (hsPkgs."tasty-hunit" or (errorHandler.buildDepError "tasty-hunit"))
            (hsPkgs."tasty-quickcheck" or (errorHandler.buildDepError "tasty-quickcheck"))
            (hsPkgs."tasty-golden" or (errorHandler.buildDepError "tasty-golden"))
            (hsPkgs."Diff" or (errorHandler.buildDepError "Diff"))
            (hsPkgs."Cabal" or (errorHandler.buildDepError "Cabal"))
            ] ++ (pkgs.lib).optional (compiler.isGhc && (compiler.version).ge "7.8") (hsPkgs."tree-diff" or (errorHandler.buildDepError "tree-diff"));
          buildable = true;
          };
        "check-tests" = {
          depends = [
            (hsPkgs."base" or (errorHandler.buildDepError "base"))
            (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
            (hsPkgs."directory" or (errorHandler.buildDepError "directory"))
            (hsPkgs."filepath" or (errorHandler.buildDepError "filepath"))
            (hsPkgs."tasty" or (errorHandler.buildDepError "tasty"))
            (hsPkgs."tasty-golden" or (errorHandler.buildDepError "tasty-golden"))
            (hsPkgs."Diff" or (errorHandler.buildDepError "Diff"))
            (hsPkgs."Cabal" or (errorHandler.buildDepError "Cabal"))
            ];
          buildable = true;
          };
        "custom-setup-tests" = {
          depends = [
            (hsPkgs."Cabal" or (errorHandler.buildDepError "Cabal"))
            (hsPkgs."base" or (errorHandler.buildDepError "base"))
            (hsPkgs."directory" or (errorHandler.buildDepError "directory"))
            (hsPkgs."filepath" or (errorHandler.buildDepError "filepath"))
            (hsPkgs."process" or (errorHandler.buildDepError "process"))
            ];
          buildable = true;
          };
        "hackage-tests" = {
          depends = [
            (hsPkgs."base" or (errorHandler.buildDepError "base"))
            (hsPkgs."Cabal" or (errorHandler.buildDepError "Cabal"))
            (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
            (hsPkgs."deepseq" or (errorHandler.buildDepError "deepseq"))
            (hsPkgs."containers" or (errorHandler.buildDepError "containers"))
            (hsPkgs."directory" or (errorHandler.buildDepError "directory"))
            (hsPkgs."filepath" or (errorHandler.buildDepError "filepath"))
            (hsPkgs."base-compat" or (errorHandler.buildDepError "base-compat"))
            (hsPkgs."base-orphans" or (errorHandler.buildDepError "base-orphans"))
            (hsPkgs."optparse-applicative" or (errorHandler.buildDepError "optparse-applicative"))
            (hsPkgs."stm" or (errorHandler.buildDepError "stm"))
            (hsPkgs."tar" or (errorHandler.buildDepError "tar"))
            ] ++ (pkgs.lib).optional (compiler.isGhc && (compiler.version).ge "7.8") (hsPkgs."tree-diff" or (errorHandler.buildDepError "tree-diff"));
          buildable = if system.isWindows then false else true;
          };
        "rpmvercmp" = {
          depends = [
            (hsPkgs."base" or (errorHandler.buildDepError "base"))
            (hsPkgs."Cabal" or (errorHandler.buildDepError "Cabal"))
            (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
            (hsPkgs."tasty" or (errorHandler.buildDepError "tasty"))
            (hsPkgs."tasty-hunit" or (errorHandler.buildDepError "tasty-hunit"))
            (hsPkgs."tasty-quickcheck" or (errorHandler.buildDepError "tasty-quickcheck"))
            (hsPkgs."QuickCheck" or (errorHandler.buildDepError "QuickCheck"))
            ];
          buildable = true;
          };
        };
      };
    } // {
    src = (pkgs.lib).mkDefault (pkgs.fetchurl {
      url = "http://hackage.haskell.org/package/Cabal-3.0.2.0.tar.gz";
      sha256 = "65d3d7e953388df26c748c4ca2c57175e71a71e779fe6b1a77f6639c4336ea07";
      });
    }) // {
    package-description-override = "cabal-version: >=1.10\nname:          Cabal\nversion:       3.0.2.0\ncopyright:     2003-2019, Cabal Development Team (see AUTHORS file)\nlicense:       BSD3\nlicense-file:  LICENSE\nauthor:        Cabal Development Team <cabal-devel@haskell.org>\nmaintainer:    cabal-devel@haskell.org\nhomepage:      http://www.haskell.org/cabal/\nbug-reports:   https://github.com/haskell/cabal/issues\nsynopsis:      A framework for packaging Haskell software\ndescription:\n  The Haskell Common Architecture for Building Applications and\n  Libraries: a framework defining a common interface for authors to more\n  easily build their Haskell applications in a portable way.\n  .\n  The Haskell Cabal is part of a larger infrastructure for distributing,\n  organizing, and cataloging Haskell libraries and tools.\ncategory:       Distribution\nbuild-type:     Simple\n-- If we use a new Cabal feature, this needs to be changed to Custom so\n-- we can bootstrap.\n\nextra-source-files:\n  README.md tests/README.md ChangeLog.md\n  doc/bugs-and-stability.rst doc/concepts-and-development.rst\n  doc/conf.py doc/config-and-install.rst doc/developing-packages.rst\n  doc/images/Cabal-dark.png doc/index.rst doc/installing-packages.rst\n  doc/intro.rst doc/misc.rst doc/nix-local-build-overview.rst\n  doc/nix-local-build.rst doc/file-format-changelog.rst doc/README.md\n  doc/references.inc\n\n  -- Generated with 'make gen-extra-source-files'\n  -- Do NOT edit this section manually; instead, run the script.\n  -- BEGIN gen-extra-source-files\n  tests/ParserTests/errors/MiniAgda.cabal\n  tests/ParserTests/errors/MiniAgda.errors\n  tests/ParserTests/errors/big-version.cabal\n  tests/ParserTests/errors/big-version.errors\n  tests/ParserTests/errors/common1.cabal\n  tests/ParserTests/errors/common1.errors\n  tests/ParserTests/errors/common2.cabal\n  tests/ParserTests/errors/common2.errors\n  tests/ParserTests/errors/common3.cabal\n  tests/ParserTests/errors/common3.errors\n  tests/ParserTests/errors/forward-compat.cabal\n  tests/ParserTests/errors/forward-compat.errors\n  tests/ParserTests/errors/forward-compat2.cabal\n  tests/ParserTests/errors/forward-compat2.errors\n  tests/ParserTests/errors/forward-compat3.cabal\n  tests/ParserTests/errors/forward-compat3.errors\n  tests/ParserTests/errors/issue-5055-2.cabal\n  tests/ParserTests/errors/issue-5055-2.errors\n  tests/ParserTests/errors/issue-5055.cabal\n  tests/ParserTests/errors/issue-5055.errors\n  tests/ParserTests/errors/leading-comma-2.cabal\n  tests/ParserTests/errors/leading-comma-2.errors\n  tests/ParserTests/errors/leading-comma-2b.cabal\n  tests/ParserTests/errors/leading-comma-2b.errors\n  tests/ParserTests/errors/leading-comma-2c.cabal\n  tests/ParserTests/errors/leading-comma-2c.errors\n  tests/ParserTests/errors/leading-comma.cabal\n  tests/ParserTests/errors/leading-comma.errors\n  tests/ParserTests/errors/libpq1.cabal\n  tests/ParserTests/errors/libpq1.errors\n  tests/ParserTests/errors/libpq2.cabal\n  tests/ParserTests/errors/libpq2.errors\n  tests/ParserTests/errors/mixin-1.cabal\n  tests/ParserTests/errors/mixin-1.errors\n  tests/ParserTests/errors/mixin-2.cabal\n  tests/ParserTests/errors/mixin-2.errors\n  tests/ParserTests/errors/multiple-libs.cabal\n  tests/ParserTests/errors/multiple-libs.errors\n  tests/ParserTests/errors/noVersion.cabal\n  tests/ParserTests/errors/noVersion.errors\n  tests/ParserTests/errors/noVersion2.cabal\n  tests/ParserTests/errors/noVersion2.errors\n  tests/ParserTests/errors/range-ge-wild.cabal\n  tests/ParserTests/errors/range-ge-wild.errors\n  tests/ParserTests/errors/removed-fields.cabal\n  tests/ParserTests/errors/removed-fields.errors\n  tests/ParserTests/errors/spdx-1.cabal\n  tests/ParserTests/errors/spdx-1.errors\n  tests/ParserTests/errors/spdx-2.cabal\n  tests/ParserTests/errors/spdx-2.errors\n  tests/ParserTests/errors/spdx-3.cabal\n  tests/ParserTests/errors/spdx-3.errors\n  tests/ParserTests/errors/undefined-flag.cabal\n  tests/ParserTests/errors/undefined-flag.errors\n  tests/ParserTests/errors/version-sets-1.cabal\n  tests/ParserTests/errors/version-sets-1.errors\n  tests/ParserTests/errors/version-sets-2.cabal\n  tests/ParserTests/errors/version-sets-2.errors\n  tests/ParserTests/errors/version-sets-3.cabal\n  tests/ParserTests/errors/version-sets-3.errors\n  tests/ParserTests/errors/version-sets-4.cabal\n  tests/ParserTests/errors/version-sets-4.errors\n  tests/ParserTests/ipi/Includes2.cabal\n  tests/ParserTests/ipi/Includes2.expr\n  tests/ParserTests/ipi/Includes2.format\n  tests/ParserTests/ipi/internal-preprocessor-test.cabal\n  tests/ParserTests/ipi/internal-preprocessor-test.expr\n  tests/ParserTests/ipi/internal-preprocessor-test.format\n  tests/ParserTests/ipi/issue-2276-ghc-9885.cabal\n  tests/ParserTests/ipi/issue-2276-ghc-9885.expr\n  tests/ParserTests/ipi/issue-2276-ghc-9885.format\n  tests/ParserTests/ipi/transformers.cabal\n  tests/ParserTests/ipi/transformers.expr\n  tests/ParserTests/ipi/transformers.format\n  tests/ParserTests/regressions/Octree-0.5.cabal\n  tests/ParserTests/regressions/Octree-0.5.expr\n  tests/ParserTests/regressions/Octree-0.5.format\n  tests/ParserTests/regressions/bad-glob-syntax.cabal\n  tests/ParserTests/regressions/bad-glob-syntax.check\n  tests/ParserTests/regressions/big-version.cabal\n  tests/ParserTests/regressions/big-version.expr\n  tests/ParserTests/regressions/big-version.format\n  tests/ParserTests/regressions/cc-options-with-optimization.cabal\n  tests/ParserTests/regressions/cc-options-with-optimization.check\n  tests/ParserTests/regressions/common-conditional.cabal\n  tests/ParserTests/regressions/common-conditional.expr\n  tests/ParserTests/regressions/common-conditional.format\n  tests/ParserTests/regressions/common.cabal\n  tests/ParserTests/regressions/common.expr\n  tests/ParserTests/regressions/common.format\n  tests/ParserTests/regressions/common2.cabal\n  tests/ParserTests/regressions/common2.expr\n  tests/ParserTests/regressions/common2.format\n  tests/ParserTests/regressions/common3.cabal\n  tests/ParserTests/regressions/common3.expr\n  tests/ParserTests/regressions/common3.format\n  tests/ParserTests/regressions/cxx-options-with-optimization.cabal\n  tests/ParserTests/regressions/cxx-options-with-optimization.check\n  tests/ParserTests/regressions/elif.cabal\n  tests/ParserTests/regressions/elif.expr\n  tests/ParserTests/regressions/elif.format\n  tests/ParserTests/regressions/elif2.cabal\n  tests/ParserTests/regressions/elif2.expr\n  tests/ParserTests/regressions/elif2.format\n  tests/ParserTests/regressions/encoding-0.8.cabal\n  tests/ParserTests/regressions/encoding-0.8.expr\n  tests/ParserTests/regressions/encoding-0.8.format\n  tests/ParserTests/regressions/extensions-paths-5054.cabal\n  tests/ParserTests/regressions/extensions-paths-5054.check\n  tests/ParserTests/regressions/generics-sop.cabal\n  tests/ParserTests/regressions/generics-sop.expr\n  tests/ParserTests/regressions/generics-sop.format\n  tests/ParserTests/regressions/ghc-option-j.cabal\n  tests/ParserTests/regressions/ghc-option-j.check\n  tests/ParserTests/regressions/haddock-api-2.18.1-check.cabal\n  tests/ParserTests/regressions/haddock-api-2.18.1-check.check\n  tests/ParserTests/regressions/hidden-main-lib.cabal\n  tests/ParserTests/regressions/hidden-main-lib.expr\n  tests/ParserTests/regressions/hidden-main-lib.format\n  tests/ParserTests/regressions/indentation.cabal\n  tests/ParserTests/regressions/indentation.expr\n  tests/ParserTests/regressions/indentation.format\n  tests/ParserTests/regressions/indentation2.cabal\n  tests/ParserTests/regressions/indentation2.expr\n  tests/ParserTests/regressions/indentation2.format\n  tests/ParserTests/regressions/indentation3.cabal\n  tests/ParserTests/regressions/indentation3.expr\n  tests/ParserTests/regressions/indentation3.format\n  tests/ParserTests/regressions/issue-5055.cabal\n  tests/ParserTests/regressions/issue-5055.expr\n  tests/ParserTests/regressions/issue-5055.format\n  tests/ParserTests/regressions/issue-5846.cabal\n  tests/ParserTests/regressions/issue-5846.expr\n  tests/ParserTests/regressions/issue-5846.format\n  tests/ParserTests/regressions/issue-6083-pkg-pkg.cabal\n  tests/ParserTests/regressions/issue-6083-pkg-pkg.expr\n  tests/ParserTests/regressions/issue-6083-pkg-pkg.format\n  tests/ParserTests/regressions/issue-774.cabal\n  tests/ParserTests/regressions/issue-774.check\n  tests/ParserTests/regressions/issue-774.expr\n  tests/ParserTests/regressions/issue-774.format\n  tests/ParserTests/regressions/jaeger-flamegraph.cabal\n  tests/ParserTests/regressions/jaeger-flamegraph.expr\n  tests/ParserTests/regressions/jaeger-flamegraph.format\n  tests/ParserTests/regressions/leading-comma-2.cabal\n  tests/ParserTests/regressions/leading-comma-2.expr\n  tests/ParserTests/regressions/leading-comma-2.format\n  tests/ParserTests/regressions/leading-comma.cabal\n  tests/ParserTests/regressions/leading-comma.expr\n  tests/ParserTests/regressions/leading-comma.format\n  tests/ParserTests/regressions/libpq1.cabal\n  tests/ParserTests/regressions/libpq1.expr\n  tests/ParserTests/regressions/libpq1.format\n  tests/ParserTests/regressions/libpq2.cabal\n  tests/ParserTests/regressions/libpq2.expr\n  tests/ParserTests/regressions/libpq2.format\n  tests/ParserTests/regressions/mixin-1.cabal\n  tests/ParserTests/regressions/mixin-1.expr\n  tests/ParserTests/regressions/mixin-1.format\n  tests/ParserTests/regressions/mixin-2.cabal\n  tests/ParserTests/regressions/mixin-2.expr\n  tests/ParserTests/regressions/mixin-2.format\n  tests/ParserTests/regressions/mixin-3.cabal\n  tests/ParserTests/regressions/mixin-3.expr\n  tests/ParserTests/regressions/mixin-3.format\n  tests/ParserTests/regressions/multiple-libs-2.cabal\n  tests/ParserTests/regressions/multiple-libs-2.check\n  tests/ParserTests/regressions/multiple-libs-2.expr\n  tests/ParserTests/regressions/multiple-libs-2.format\n  tests/ParserTests/regressions/noVersion.cabal\n  tests/ParserTests/regressions/noVersion.expr\n  tests/ParserTests/regressions/noVersion.format\n  tests/ParserTests/regressions/nothing-unicode.cabal\n  tests/ParserTests/regressions/nothing-unicode.check\n  tests/ParserTests/regressions/nothing-unicode.expr\n  tests/ParserTests/regressions/nothing-unicode.format\n  tests/ParserTests/regressions/pre-1.6-glob.cabal\n  tests/ParserTests/regressions/pre-1.6-glob.check\n  tests/ParserTests/regressions/pre-2.4-globstar.cabal\n  tests/ParserTests/regressions/pre-2.4-globstar.check\n  tests/ParserTests/regressions/shake.cabal\n  tests/ParserTests/regressions/shake.expr\n  tests/ParserTests/regressions/shake.format\n  tests/ParserTests/regressions/spdx-1.cabal\n  tests/ParserTests/regressions/spdx-1.expr\n  tests/ParserTests/regressions/spdx-1.format\n  tests/ParserTests/regressions/spdx-2.cabal\n  tests/ParserTests/regressions/spdx-2.expr\n  tests/ParserTests/regressions/spdx-2.format\n  tests/ParserTests/regressions/spdx-3.cabal\n  tests/ParserTests/regressions/spdx-3.expr\n  tests/ParserTests/regressions/spdx-3.format\n  tests/ParserTests/regressions/th-lift-instances.cabal\n  tests/ParserTests/regressions/th-lift-instances.expr\n  tests/ParserTests/regressions/th-lift-instances.format\n  tests/ParserTests/regressions/version-sets.cabal\n  tests/ParserTests/regressions/version-sets.expr\n  tests/ParserTests/regressions/version-sets.format\n  tests/ParserTests/regressions/wl-pprint-indef.cabal\n  tests/ParserTests/regressions/wl-pprint-indef.expr\n  tests/ParserTests/regressions/wl-pprint-indef.format\n  tests/ParserTests/warnings/bom.cabal\n  tests/ParserTests/warnings/bool.cabal\n  tests/ParserTests/warnings/deprecatedfield.cabal\n  tests/ParserTests/warnings/doubledash.cabal\n  tests/ParserTests/warnings/extratestmodule.cabal\n  tests/ParserTests/warnings/gluedop.cabal\n  tests/ParserTests/warnings/multiplesingular.cabal\n  tests/ParserTests/warnings/nbsp.cabal\n  tests/ParserTests/warnings/newsyntax.cabal\n  tests/ParserTests/warnings/oldsyntax.cabal\n  tests/ParserTests/warnings/subsection.cabal\n  tests/ParserTests/warnings/tab.cabal\n  tests/ParserTests/warnings/trailingfield.cabal\n  tests/ParserTests/warnings/unknownfield.cabal\n  tests/ParserTests/warnings/unknownsection.cabal\n  tests/ParserTests/warnings/utf8.cabal\n  tests/ParserTests/warnings/versiontag.cabal\n  tests/cbits/rpmvercmp.c\n  tests/hackage/check.sh\n  tests/hackage/download.sh\n  tests/hackage/unpack.sh\n  tests/misc/ghc-supported-languages.hs\n  -- END gen-extra-source-files\n\nsource-repository head\n  type:     git\n  location: https://github.com/haskell/cabal/\n  subdir:   Cabal\n\nflag bundled-binary-generic\n  default: False\n\nlibrary\n  build-depends:\n    array      >= 0.4.0.1  && < 0.6,\n    base       >= 4.6      && < 5,\n    bytestring >= 0.10.0.0 && < 0.11,\n    containers >= 0.5.0.0  && < 0.7,\n    deepseq    >= 1.3.0.1  && < 1.5,\n    directory  >= 1.2      && < 1.4,\n    filepath   >= 1.3.0.1  && < 1.5,\n    pretty     >= 1.1.1    && < 1.2,\n    process    >= 1.1.0.2  && < 1.7,\n    time       >= 1.4.0.1  && < 1.10\n\n  if flag(bundled-binary-generic)\n    build-depends: binary >= 0.5.1.1 && < 0.7\n  else\n    build-depends: binary >= 0.7 && < 0.9\n\n  if os(windows)\n    build-depends: Win32 >= 2.3.0.0 && < 2.9\n  else\n    build-depends: unix  >= 2.6.0.0 && < 2.8\n\n  ghc-options: -Wall -fno-ignore-asserts -fwarn-tabs\n  if impl(ghc >= 8.0)\n    ghc-options: -Wcompat -Wnoncanonical-monad-instances\n    if impl(ghc <8.8)\n      ghc-options: -Wnoncanonical-monadfail-instances\n\n  if !impl(ghc >= 8.0)\n    -- at least one of lib:Cabal's dependency (i.e. `parsec`)\n    -- already depends on `fail` and `semigroups` transitively\n    build-depends: fail == 4.9.*, semigroups >= 0.18.3 && < 0.20\n\n  exposed-modules:\n    Distribution.Backpack\n    Distribution.Backpack.Configure\n    Distribution.Backpack.ComponentsGraph\n    Distribution.Backpack.ConfiguredComponent\n    Distribution.Backpack.DescribeUnitId\n    Distribution.Backpack.FullUnitId\n    Distribution.Backpack.LinkedComponent\n    Distribution.Backpack.ModSubst\n    Distribution.Backpack.ModuleShape\n    Distribution.Backpack.PreModuleShape\n    Distribution.CabalSpecVersion\n    Distribution.Utils.IOData\n    Distribution.Utils.LogProgress\n    Distribution.Utils.MapAccum\n    Distribution.Compat.CreatePipe\n    Distribution.Compat.Directory\n    Distribution.Compat.Environment\n    Distribution.Compat.Exception\n    Distribution.Compat.FilePath\n    Distribution.Compat.Graph\n    Distribution.Compat.Internal.TempFile\n    Distribution.Compat.Newtype\n    Distribution.Compat.ResponseFile\n    Distribution.Compat.Prelude.Internal\n    Distribution.Compat.Semigroup\n    Distribution.Compat.Stack\n    Distribution.Compat.Time\n    Distribution.Compat.DList\n    Distribution.Compiler\n    Distribution.InstalledPackageInfo\n    Distribution.Types.AbiDependency\n    Distribution.Types.ExposedModule\n    Distribution.Types.InstalledPackageInfo\n    Distribution.Types.InstalledPackageInfo.FieldGrammar\n    Distribution.License\n    Distribution.Make\n    Distribution.ModuleName\n    Distribution.Package\n    Distribution.PackageDescription\n    Distribution.PackageDescription.Check\n    Distribution.PackageDescription.Configuration\n    Distribution.PackageDescription.PrettyPrint\n    Distribution.PackageDescription.Utils\n    Distribution.ReadE\n    Distribution.Simple\n    Distribution.Simple.Bench\n    Distribution.Simple.Build\n    Distribution.Simple.Build.Macros\n    Distribution.Simple.Build.PathsModule\n    Distribution.Simple.BuildPaths\n    Distribution.Simple.BuildTarget\n    Distribution.Simple.BuildToolDepends\n    Distribution.Simple.CCompiler\n    Distribution.Simple.Command\n    Distribution.Simple.Compiler\n    Distribution.Simple.Configure\n    Distribution.Simple.Flag\n    Distribution.Simple.GHC\n    Distribution.Simple.GHCJS\n    Distribution.Simple.Haddock\n    Distribution.Simple.Doctest\n    Distribution.Simple.Glob\n    Distribution.Simple.HaskellSuite\n    Distribution.Simple.Hpc\n    Distribution.Simple.Install\n    Distribution.Simple.InstallDirs\n    Distribution.Simple.InstallDirs.Internal\n    Distribution.Simple.LocalBuildInfo\n    Distribution.Simple.PackageIndex\n    Distribution.Simple.PreProcess\n    Distribution.Simple.PreProcess.Unlit\n    Distribution.Simple.Program\n    Distribution.Simple.Program.Ar\n    Distribution.Simple.Program.Builtin\n    Distribution.Simple.Program.Db\n    Distribution.Simple.Program.Find\n    Distribution.Simple.Program.GHC\n    Distribution.Simple.Program.HcPkg\n    Distribution.Simple.Program.Hpc\n    Distribution.Simple.Program.Internal\n    Distribution.Simple.Program.Ld\n    Distribution.Simple.Program.ResponseFile\n    Distribution.Simple.Program.Run\n    Distribution.Simple.Program.Script\n    Distribution.Simple.Program.Strip\n    Distribution.Simple.Program.Types\n    Distribution.Simple.Register\n    Distribution.Simple.Setup\n    Distribution.Simple.ShowBuildInfo\n    Distribution.Simple.SrcDist\n    Distribution.Simple.Test\n    Distribution.Simple.Test.ExeV10\n    Distribution.Simple.Test.LibV09\n    Distribution.Simple.Test.Log\n    Distribution.Simple.UHC\n    Distribution.Simple.UserHooks\n    Distribution.Simple.Utils\n    Distribution.SPDX\n    Distribution.SPDX.License\n    Distribution.SPDX.LicenseId\n    Distribution.SPDX.LicenseExceptionId\n    Distribution.SPDX.LicenseExpression\n    Distribution.SPDX.LicenseListVersion\n    Distribution.SPDX.LicenseReference\n    Distribution.System\n    Distribution.TestSuite\n    Distribution.Text\n    Distribution.Pretty\n    Distribution.Types.AbiHash\n    Distribution.Types.AnnotatedId\n    Distribution.Types.Benchmark\n    Distribution.Types.BenchmarkInterface\n    Distribution.Types.BenchmarkType\n    Distribution.Types.BuildInfo\n    Distribution.Types.BuildType\n    Distribution.Types.ComponentInclude\n    Distribution.Types.Dependency\n    Distribution.Types.ExeDependency\n    Distribution.Types.LegacyExeDependency\n    Distribution.Types.PkgconfigDependency\n    Distribution.Types.DependencyMap\n    Distribution.Types.ComponentId\n    Distribution.Types.MungedPackageId\n    Distribution.Types.PackageId\n    Distribution.Types.UnitId\n    Distribution.Types.Executable\n    Distribution.Types.ExecutableScope\n    Distribution.Types.Library\n    Distribution.Types.LibraryVisibility\n    Distribution.Types.ForeignLib\n    Distribution.Types.ForeignLibType\n    Distribution.Types.ForeignLibOption\n    Distribution.Types.Module\n    Distribution.Types.ModuleReexport\n    Distribution.Types.ModuleRenaming\n    Distribution.Types.ComponentName\n    Distribution.Types.LibraryName\n    Distribution.Types.MungedPackageName\n    Distribution.Types.PackageName\n    Distribution.Types.PackageName.Magic\n    Distribution.Types.PkgconfigName\n    Distribution.Types.PkgconfigVersion\n    Distribution.Types.PkgconfigVersionRange\n    Distribution.Types.UnqualComponentName\n    Distribution.Types.IncludeRenaming\n    Distribution.Types.Mixin\n    Distribution.Types.SetupBuildInfo\n    Distribution.Types.TestSuite\n    Distribution.Types.TestSuiteInterface\n    Distribution.Types.TestType\n    Distribution.Types.GenericPackageDescription\n    Distribution.Types.Condition\n    Distribution.Types.CondTree\n    Distribution.Types.HookedBuildInfo\n    Distribution.Types.PackageDescription\n    Distribution.Types.SourceRepo\n    Distribution.Types.Component\n    Distribution.Types.ComponentLocalBuildInfo\n    Distribution.Types.LocalBuildInfo\n    Distribution.Types.ComponentRequestedSpec\n    Distribution.Types.TargetInfo\n    Distribution.Types.Version\n    Distribution.Types.VersionRange\n    Distribution.Types.VersionRange.Internal\n    Distribution.Types.VersionInterval\n    Distribution.Types.GivenComponent\n    Distribution.Types.PackageVersionConstraint\n    Distribution.Utils.Generic\n    Distribution.Utils.NubList\n    Distribution.Utils.ShortText\n    Distribution.Utils.Progress\n    Distribution.Verbosity\n    Distribution.Verbosity.Internal\n    Distribution.Version\n    Language.Haskell.Extension\n    Distribution.Compat.Binary\n\n  -- Parsec parser-related modules\n  build-depends:\n    -- transformers-0.4.0.0 doesn't have record syntax e.g. for Identity\n    -- See also https://github.com/ekmett/transformers-compat/issues/35\n    transformers (>= 0.3      && < 0.4) || (>=0.4.1.0 && <0.6),\n    mtl           >= 2.1      && < 2.3,\n    text          >= 1.2.3.0  && < 1.3,\n    parsec        >= 3.1.13.0 && < 3.2\n  exposed-modules:\n    Distribution.Compat.Parsing\n    Distribution.Compat.CharParsing\n    Distribution.FieldGrammar\n    Distribution.FieldGrammar.Class\n    Distribution.FieldGrammar.FieldDescrs\n    Distribution.FieldGrammar.Parsec\n    Distribution.FieldGrammar.Pretty\n    Distribution.PackageDescription.FieldGrammar\n    Distribution.PackageDescription.Parsec\n    Distribution.PackageDescription.Quirks\n    Distribution.Parsec\n    Distribution.Parsec.Error\n    Distribution.Parsec.Newtypes\n    Distribution.Parsec.Position\n    Distribution.Parsec.Warning\n    Distribution.Parsec.FieldLineStream\n    Distribution.Fields\n    Distribution.Fields.ConfVar\n    Distribution.Fields.Field\n    Distribution.Fields.Lexer\n    Distribution.Fields.LexerMonad\n    Distribution.Fields.ParseResult\n    Distribution.Fields.Parser\n    Distribution.Fields.Pretty\n\n  -- Lens functionality\n  exposed-modules:\n    Distribution.Compat.Lens\n    Distribution.Types.Lens\n    Distribution.Types.Benchmark.Lens\n    Distribution.Types.BuildInfo.Lens\n    Distribution.Types.Executable.Lens\n    Distribution.Types.ForeignLib.Lens\n    Distribution.Types.GenericPackageDescription.Lens\n    Distribution.Types.InstalledPackageInfo.Lens\n    Distribution.Types.Library.Lens\n    Distribution.Types.PackageDescription.Lens\n    Distribution.Types.PackageId.Lens\n    Distribution.Types.SetupBuildInfo.Lens\n    Distribution.Types.SourceRepo.Lens\n    Distribution.Types.TestSuite.Lens\n\n  other-modules:\n    Distribution.Backpack.PreExistingComponent\n    Distribution.Backpack.ReadyComponent\n    Distribution.Backpack.MixLink\n    Distribution.Backpack.ModuleScope\n    Distribution.Backpack.UnifyM\n    Distribution.Backpack.Id\n    Distribution.Utils.UnionFind\n    Distribution.Utils.Base62\n    Distribution.Compat.CopyFile\n    Distribution.Compat.GetShortPathName\n    Distribution.Compat.MonadFail\n    Distribution.Compat.Prelude\n    Distribution.Compat.SnocList\n    Distribution.GetOpt\n    Distribution.Lex\n    Distribution.Utils.String\n    Distribution.Simple.GHC.EnvironmentParser\n    Distribution.Simple.GHC.Internal\n    Distribution.Simple.GHC.ImplInfo\n    Distribution.Simple.Utils.Json\n    Paths_Cabal\n\n  if flag(bundled-binary-generic)\n    other-modules:\n      Distribution.Compat.Binary.Class\n      Distribution.Compat.Binary.Generic\n\n  default-language: Haskell2010\n  other-extensions:\n    BangPatterns\n    CPP\n    DefaultSignatures\n    DeriveDataTypeable\n    DeriveFoldable\n    DeriveFunctor\n    DeriveGeneric\n    DeriveTraversable\n    ExistentialQuantification\n    FlexibleContexts\n    FlexibleInstances\n    GeneralizedNewtypeDeriving\n    ImplicitParams\n    KindSignatures\n    NondecreasingIndentation\n    OverloadedStrings\n    RankNTypes\n    RecordWildCards\n    ScopedTypeVariables\n    StandaloneDeriving\n    Trustworthy\n    TypeFamilies\n    TypeOperators\n    TypeSynonymInstances\n    UndecidableInstances\n\n  if impl(ghc >= 7.11)\n    other-extensions: PatternSynonyms\n\n-- Small, fast running tests.\ntest-suite unit-tests\n  type: exitcode-stdio-1.0\n  hs-source-dirs: tests\n  other-modules:\n    Test.Laws\n    Test.QuickCheck.Utils\n    UnitTests.Distribution.Compat.CreatePipe\n    UnitTests.Distribution.Compat.Graph\n    UnitTests.Distribution.Compat.Time\n    UnitTests.Distribution.Simple.Glob\n    UnitTests.Distribution.Simple.Program.GHC\n    UnitTests.Distribution.Simple.Program.Internal\n    UnitTests.Distribution.Simple.Utils\n    UnitTests.Distribution.SPDX\n    UnitTests.Distribution.System\n    UnitTests.Distribution.Types.GenericPackageDescription\n    UnitTests.Distribution.Utils.Generic\n    UnitTests.Distribution.Utils.NubList\n    UnitTests.Distribution.Utils.ShortText\n    UnitTests.Distribution.Version\n    UnitTests.Distribution.PkgconfigVersion\n  main-is: UnitTests.hs\n  build-depends:\n    array,\n    base,\n    binary,\n    bytestring,\n    containers,\n    directory,\n    filepath,\n    integer-logarithms >= 1.0.2 && <1.1,\n    tasty >= 1.2.3 && < 1.3,\n    tasty-hunit,\n    tasty-quickcheck,\n    tagged,\n    temporary,\n    text,\n    pretty,\n    Diff >=0.4 && <0.5,\n    QuickCheck >= 2.13.2 && < 2.14,\n    Cabal\n  ghc-options: -Wall\n  default-language: Haskell2010\n\ntest-suite parser-tests\n  type: exitcode-stdio-1.0\n  hs-source-dirs: tests\n  main-is: ParserTests.hs\n  build-depends:\n    base,\n    base-compat >=0.11.0 && <0.12,\n    bytestring,\n    directory,\n    filepath,\n    tasty >= 1.2.3 && < 1.3,\n    tasty-hunit,\n    tasty-quickcheck,\n    tasty-golden >=2.3.1.1 && <2.4,\n    Diff >=0.4 && <0.5,\n    Cabal\n  ghc-options: -Wall\n  default-language: Haskell2010\n\n  if impl(ghc >= 7.8)\n    build-depends:\n      tree-diff      >= 0.1 && <0.2\n    other-modules:\n      Instances.TreeDiff\n      Instances.TreeDiff.Language\n      Instances.TreeDiff.SPDX\n      Instances.TreeDiff.Version\n\ntest-suite check-tests\n  type: exitcode-stdio-1.0\n  hs-source-dirs: tests\n  main-is: CheckTests.hs\n  build-depends:\n    base,\n    bytestring,\n    directory,\n    filepath,\n    tasty >= 1.2.3 && < 1.3,\n    tasty-golden >=2.3.1.1 && <2.4,\n    Diff >=0.4 && <0.5,\n    Cabal\n  ghc-options: -Wall\n  default-language: Haskell2010\n\ntest-suite custom-setup-tests\n  type: exitcode-stdio-1.0\n  hs-source-dirs: tests/custom-setup\n  main-is: CustomSetupTests.hs\n  other-modules:\n    CabalDoctestSetup\n    IdrisSetup\n  build-depends:\n    Cabal,\n    base,\n    directory,\n    filepath,\n    process\n  default-language: Haskell2010\n\ntest-suite hackage-tests\n  type: exitcode-stdio-1.0\n  main-is: HackageTests.hs\n\n  -- TODO: need to get 01-index.tar on appveyor\n  if os(windows)\n    buildable: False\n\n  hs-source-dirs: tests\n\n  build-depends:\n    base,\n    Cabal,\n    bytestring,\n    deepseq,\n    containers,\n    directory,\n    filepath\n\n  build-depends:\n    base-compat          >=0.11.0   && <0.12,\n    base-orphans         >=0.6      && <0.9,\n    optparse-applicative >=0.13.2.0 && <0.16,\n    stm                  >=2.4.5.0  && <2.6,\n    tar                  >=0.5.0.3  && <0.6\n\n  if impl(ghc >= 7.8)\n    build-depends:\n      tree-diff      >= 0.1 && <0.2\n    other-modules:\n      Instances.TreeDiff\n      Instances.TreeDiff.Language\n      Instances.TreeDiff.SPDX\n      Instances.TreeDiff.Version\n\n  ghc-options: -Wall -rtsopts -threaded\n  default-extensions: CPP\n  default-language: Haskell2010\n\ntest-suite rpmvercmp\n  type: exitcode-stdio-1.0\n  main-is: RPMVerCmp.hs\n\n  hs-source-dirs: tests\n  build-depends:\n    base,\n    Cabal,\n    bytestring\n\n  build-depends:\n    tasty >= 1.2.3 && < 1.3,\n    tasty-hunit,\n    tasty-quickcheck,\n    QuickCheck\n\n  c-sources: tests/cbits/rpmvercmp.c\n  cc-options: -Wall\n\n  ghc-options: -Wall\n  default-language: Haskell2010\n";
    }