diff --git a/src/TH/RelativePaths.hs b/src/TH/RelativePaths.hs
index e74a5fc..ca7d209 100644
--- a/src/TH/RelativePaths.hs
+++ b/src/TH/RelativePaths.hs
@@ -25,7 +25,6 @@ import qualified Data.Text.IO as T
 import qualified Data.Text.Lazy as LT
 import qualified Data.Text.Lazy.IO as LT
 import           Language.Haskell.TH (Q, Loc(loc_filename), location, runIO, reportWarning)
-import           Language.Haskell.TH.Syntax (addDependentFile)
 import           System.Directory (getDirectoryContents, getCurrentDirectory, setCurrentDirectory, canonicalizePath)
 import           System.FilePath
 
@@ -35,7 +34,6 @@ import           System.FilePath
 qReadFileBS :: FilePath -> Q BS.ByteString
 qReadFileBS fp = do
     fp' <- pathRelativeToCabalPackage fp
-    addDependentFile fp'
     runIO $ BS.readFile fp'
 
 -- | Reads a file as a lazy ByteString. The path is specified relative
@@ -44,7 +42,6 @@ qReadFileBS fp = do
 qReadFileLBS :: FilePath -> Q LBS.ByteString
 qReadFileLBS fp = do
     fp' <- pathRelativeToCabalPackage fp
-    addDependentFile fp'
     runIO $ LBS.readFile fp'
 
 -- | Reads a file as a strict Text. The path is specified relative
@@ -53,7 +50,6 @@ qReadFileLBS fp = do
 qReadFileText :: FilePath -> Q T.Text
 qReadFileText fp = do
     fp' <- pathRelativeToCabalPackage fp
-    addDependentFile fp'
     runIO $ T.readFile fp'
 
 -- | Reads a file as a lazy Text. The path is specified relative
@@ -62,7 +58,6 @@ qReadFileText fp = do
 qReadFileLazyText :: FilePath -> Q LT.Text
 qReadFileLazyText fp = do
     fp' <- pathRelativeToCabalPackage fp
-    addDependentFile fp'
     runIO $ LT.readFile fp'
 
 -- | Reads a file as a String. The path is specified relative
@@ -71,7 +66,6 @@ qReadFileLazyText fp = do
 qReadFileString :: FilePath -> Q String
 qReadFileString fp = do
     fp' <- pathRelativeToCabalPackage fp
-    addDependentFile fp'
     runIO $ readFile fp'
 
 -- | Runs the 'Q' action, temporarily setting the current working
