diff --git a/rts/linker/PEi386.c b/rts/linker/PEi386.c
index 3dcf8c4281..a1474b57bd 100644
--- a/rts/linker/PEi386.c
+++ b/rts/linker/PEi386.c
@@ -221,10 +221,12 @@ static IndirectAddr* indirects = NULL;
 /* Adds a DLL instance to the list of DLLs in which to search for symbols. */
 static void addDLLHandle(pathchar* dll_name, HINSTANCE instance) {
 
+    IF_DEBUG(linker, debugBelch("addDLLHandle(%" PATH_FMT ")...\n", dll_name));
     /* At this point, we actually know what was loaded.
        So bail out if it's already been loaded.  */
     if (checkIfDllLoaded(instance))
     {
+        IF_DEBUG(linker, debugBelch("already loaded: addDLLHandle(%" PATH_FMT ")\n", dll_name));
         return;
     }
 
@@ -259,7 +261,7 @@ static void addDLLHandle(pathchar* dll_name, HINSTANCE instance) {
     do {
         pathchar* module = mkPath((char*)(BYTE *)instance + imports->Name);
         HINSTANCE module_instance = GetModuleHandleW(module);
-        if (0 != wcsncmp(module, ms_dll, len)
+        if ((true || 0 != wcsncmp(module, ms_dll, len))
             && module_instance
             && !checkIfDllLoaded(module_instance))
         {
@@ -270,6 +272,7 @@ static void addDLLHandle(pathchar* dll_name, HINSTANCE instance) {
         stgFree(module);
         imports++;
     } while (imports->Name);
+    IF_DEBUG(linker, debugBelch("done: addDLLHandle(%" PATH_FMT ")\n", dll_name));
 }
 
 static OpenedDLL* findLoadedDll(HINSTANCE instance)
