From 10f06163d9adcb3b6e6438f1524faaca3bf6c3b2 Mon Sep 17 00:00:00 2001
From: Cheng Shao <terrorjack@type.dance>
Date: Sat, 23 Aug 2025 05:11:31 +0200
Subject: [PATCH] wasm: ensure setKeepCAFs() is called in ghci

This patch is a critical bugfix for #26106, see comment and linked
issue for details.
---
 utils/jsffi/dyld.mjs | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/utils/jsffi/dyld.mjs b/utils/jsffi/dyld.mjs
index 285cc8b72011..8c38ebc2efa0 100755
--- a/utils/jsffi/dyld.mjs
+++ b/utils/jsffi/dyld.mjs
@@ -1105,6 +1105,20 @@ class DyLD {
       if (/libHSghc-internal-\d+(\.\d+)*/i.test(soname)) {
         this.rts_init();
         delete this.rts_init;
+
+        // At this point the RTS symbols in linear memory are fixed
+        // and constructors are run, especially the one in JSFFI.c
+        // that does GHC RTS initialization for any code that links
+        // JSFFI.o. Luckily no Haskell computation or gc has taken
+        // place yet, so we must set keepCAFs=1 right now! Otherwise,
+        // any BCO created by later TH splice or ghci expression may
+        // refer to any CAF that's not reachable from GC roots (here
+        // our only entry point is defaultServer) and the CAF could
+        // have been GC'ed! (#26106)
+        //
+        // We call it here instead of in RTS C code, since we only
+        // want keepCAFs=1 for ghci, not user code.
+        this.exportFuncs.setKeepCAFs();
       }
       init();
     }