From 45624fed757dea6ad1e2dbc6840603092da5359a Mon Sep 17 00:00:00 2001
From: Moritz Angermann <moritz.angermann@gmail.com>
Date: Wed, 21 Feb 2024 02:56:21 +0000
Subject: [PATCH 1/7] Refactor IServ.hs

---
 libraries/libiserv/src/IServ.hs | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/libraries/libiserv/src/IServ.hs b/libraries/libiserv/src/IServ.hs
index 6361a8c..7a4bd95 100644
--- a/libraries/libiserv/src/IServ.hs
+++ b/libraries/libiserv/src/IServ.hs
@@ -30,8 +30,8 @@ serv verbose hook pipe restore = loop
     when verbose $ trace ("msg: " ++ (show msg))
     case msg of
       Shutdown -> return ()
-      RunTH st q ty loc -> wrapRunTH $ runTH pipe st q ty loc
-      RunModFinalizers st qrefs -> wrapRunTH $ runModFinalizerRefs pipe st qrefs
+      RunTH st q ty loc -> wrapRunTH (runTH pipe st q ty loc) >>= reply
+      RunModFinalizers st qrefs -> wrapRunTH (runModFinalizerRefs pipe st qrefs) >>= reply
       _other -> run msg >>= reply
 
   reply :: forall a. (Binary a, Show a) => a -> IO ()
@@ -44,7 +44,7 @@ serv verbose hook pipe restore = loop
   -- THMessage requests, and then finally send RunTHDone followed by a
   -- QResult.  For an overview of how TH works with Remote GHCi, see
   -- Note [Remote Template Haskell] in libraries/ghci/GHCi/TH.hs.
-  wrapRunTH :: forall a. (Binary a, Show a) => IO a -> IO ()
+  wrapRunTH :: forall a. (Binary a, Show a) => IO a -> IO (QResult a)
   wrapRunTH io = do
     when verbose $ trace "wrapRunTH..."
     r <- try io
@@ -55,14 +55,14 @@ serv verbose hook pipe restore = loop
       Left e
         | Just (GHCiQException _ err) <- fromException e  -> do
            when verbose $ trace ("QFail " ++ show err)
-           reply (QFail err :: QResult a)
+           return (QFail err :: QResult a)
         | otherwise -> do
            str <- showException e
            when verbose $ trace ("QException " ++ str)
-           reply (QException str :: QResult a)
+           return (QException str :: QResult a)
       Right a -> do
         when verbose $ trace "QDone"
-        reply (QDone a)
+        return (QDone a)
 
   -- carefully when showing an exception, there might be other exceptions
   -- lurking inside it.  If so, we return the inner exception instead.
-- 
2.33.0

